// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: proto/moderation_service/moderation_service.proto

package moderation_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdentifyAndReplaceTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *IdentifyAndReplaceTextRequest) Reset() {
	*x = IdentifyAndReplaceTextRequest{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentifyAndReplaceTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyAndReplaceTextRequest) ProtoMessage() {}

func (x *IdentifyAndReplaceTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyAndReplaceTextRequest.ProtoReflect.Descriptor instead.
func (*IdentifyAndReplaceTextRequest) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{0}
}

func (x *IdentifyAndReplaceTextRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type IdentifyAndReplaceTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnedContent string `protobuf:"bytes,1,opt,name=ReturnedContent,proto3" json:"ReturnedContent,omitempty"`
	Error           string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *IdentifyAndReplaceTextResponse) Reset() {
	*x = IdentifyAndReplaceTextResponse{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentifyAndReplaceTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyAndReplaceTextResponse) ProtoMessage() {}

func (x *IdentifyAndReplaceTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyAndReplaceTextResponse.ProtoReflect.Descriptor instead.
func (*IdentifyAndReplaceTextResponse) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{1}
}

func (x *IdentifyAndReplaceTextResponse) GetReturnedContent() string {
	if x != nil {
		return x.ReturnedContent
	}
	return ""
}

func (x *IdentifyAndReplaceTextResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReportPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID     uint32 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	ReportedBy uint32 `protobuf:"varint,2,opt,name=ReportedBy,proto3" json:"ReportedBy,omitempty"`
	Reason     string `protobuf:"bytes,3,opt,name=Reason,proto3" json:"Reason,omitempty"`
}

func (x *ReportPost) Reset() {
	*x = ReportPost{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPost) ProtoMessage() {}

func (x *ReportPost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPost.ProtoReflect.Descriptor instead.
func (*ReportPost) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReportPost) GetPostID() uint32 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *ReportPost) GetReportedBy() uint32 {
	if x != nil {
		return x.ReportedBy
	}
	return 0
}

func (x *ReportPost) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ReportAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID  uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	ReportedBy uint32 `protobuf:"varint,2,opt,name=ReportedBy,proto3" json:"ReportedBy,omitempty"`
	Reason     string `protobuf:"bytes,3,opt,name=Reason,proto3" json:"Reason,omitempty"`
}

func (x *ReportAccount) Reset() {
	*x = ReportAccount{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAccount) ProtoMessage() {}

func (x *ReportAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAccount.ProtoReflect.Descriptor instead.
func (*ReportAccount) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{3}
}

func (x *ReportAccount) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ReportAccount) GetReportedBy() uint32 {
	if x != nil {
		return x.ReportedBy
	}
	return 0
}

func (x *ReportAccount) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ResolveReportedPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID     uint32 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	ResolvedBy uint32 `protobuf:"varint,2,opt,name=ResolvedBy,proto3" json:"ResolvedBy,omitempty"`
	Method     string `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
}

func (x *ResolveReportedPost) Reset() {
	*x = ResolveReportedPost{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveReportedPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveReportedPost) ProtoMessage() {}

func (x *ResolveReportedPost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveReportedPost.ProtoReflect.Descriptor instead.
func (*ResolveReportedPost) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{4}
}

func (x *ResolveReportedPost) GetPostID() uint32 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *ResolveReportedPost) GetResolvedBy() uint32 {
	if x != nil {
		return x.ResolvedBy
	}
	return 0
}

func (x *ResolveReportedPost) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type ResolveReportedAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID  uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	ResolvedBy uint32 `protobuf:"varint,2,opt,name=ResolvedBy,proto3" json:"ResolvedBy,omitempty"`
	Method     string `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
}

func (x *ResolveReportedAccount) Reset() {
	*x = ResolveReportedAccount{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveReportedAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveReportedAccount) ProtoMessage() {}

func (x *ResolveReportedAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveReportedAccount.ProtoReflect.Descriptor instead.
func (*ResolveReportedAccount) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{5}
}

func (x *ResolveReportedAccount) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ResolveReportedAccount) GetResolvedBy() uint32 {
	if x != nil {
		return x.ResolvedBy
	}
	return 0
}

func (x *ResolveReportedAccount) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type SingleLineStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *SingleLineStatusResponse) Reset() {
	*x = SingleLineStatusResponse{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleLineStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleLineStatusResponse) ProtoMessage() {}

func (x *SingleLineStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleLineStatusResponse.ProtoReflect.Descriptor instead.
func (*SingleLineStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{6}
}

func (x *SingleLineStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetReportedAccountListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize uint32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *GetReportedAccountListRequest) Reset() {
	*x = GetReportedAccountListRequest{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportedAccountListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportedAccountListRequest) ProtoMessage() {}

func (x *GetReportedAccountListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportedAccountListRequest.ProtoReflect.Descriptor instead.
func (*GetReportedAccountListRequest) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetReportedAccountListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReportedAccountListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ReportAccountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Reasons       string `protobuf:"bytes,2,opt,name=Reasons,proto3" json:"Reasons,omitempty"`
	ResolveStatus string `protobuf:"bytes,3,opt,name=ResolveStatus,proto3" json:"ResolveStatus,omitempty"`
}

func (x *ReportAccountData) Reset() {
	*x = ReportAccountData{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAccountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAccountData) ProtoMessage() {}

func (x *ReportAccountData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAccountData.ProtoReflect.Descriptor instead.
func (*ReportAccountData) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{8}
}

func (x *ReportAccountData) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ReportAccountData) GetReasons() string {
	if x != nil {
		return x.Reasons
	}
	return ""
}

func (x *ReportAccountData) GetResolveStatus() string {
	if x != nil {
		return x.ResolveStatus
	}
	return ""
}

type GetReportedAccountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32               `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize uint32               `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	Data     []*ReportAccountData `protobuf:"bytes,3,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetReportedAccountListResponse) Reset() {
	*x = GetReportedAccountListResponse{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportedAccountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportedAccountListResponse) ProtoMessage() {}

func (x *GetReportedAccountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportedAccountListResponse.ProtoReflect.Descriptor instead.
func (*GetReportedAccountListResponse) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetReportedAccountListResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReportedAccountListResponse) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetReportedAccountListResponse) GetData() []*ReportAccountData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetReportedPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize uint32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *GetReportedPostRequest) Reset() {
	*x = GetReportedPostRequest{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportedPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportedPostRequest) ProtoMessage() {}

func (x *GetReportedPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportedPostRequest.ProtoReflect.Descriptor instead.
func (*GetReportedPostRequest) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetReportedPostRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReportedPostRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetReportedPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          uint32              `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize      uint32              `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	ReportedPosts []*ReportedPostData `protobuf:"bytes,3,rep,name=ReportedPosts,proto3" json:"ReportedPosts,omitempty"`
}

func (x *GetReportedPostResponse) Reset() {
	*x = GetReportedPostResponse{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportedPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportedPostResponse) ProtoMessage() {}

func (x *GetReportedPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportedPostResponse.ProtoReflect.Descriptor instead.
func (*GetReportedPostResponse) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetReportedPostResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetReportedPostResponse) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetReportedPostResponse) GetReportedPosts() []*ReportedPostData {
	if x != nil {
		return x.ReportedPosts
	}
	return nil
}

type ReportedPostData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PostID        uint32 `protobuf:"varint,2,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Reason        string `protobuf:"bytes,4,opt,name=Reason,proto3" json:"Reason,omitempty"`
	ResolveStatus string `protobuf:"bytes,3,opt,name=ResolveStatus,proto3" json:"ResolveStatus,omitempty"`
}

func (x *ReportedPostData) Reset() {
	*x = ReportedPostData{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportedPostData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportedPostData) ProtoMessage() {}

func (x *ReportedPostData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportedPostData.ProtoReflect.Descriptor instead.
func (*ReportedPostData) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{12}
}

func (x *ReportedPostData) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ReportedPostData) GetPostID() uint32 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *ReportedPostData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ReportedPostData) GetResolveStatus() string {
	if x != nil {
		return x.ResolveStatus
	}
	return ""
}

type GetListBanWordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAccountID uint32 `protobuf:"varint,1,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
}

func (x *GetListBanWordsReq) Reset() {
	*x = GetListBanWordsReq{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListBanWordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListBanWordsReq) ProtoMessage() {}

func (x *GetListBanWordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListBanWordsReq.ProtoReflect.Descriptor instead.
func (*GetListBanWordsReq) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetListBanWordsReq) GetRequestAccountID() uint32 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

type WordData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Word string `protobuf:"bytes,2,opt,name=Word,proto3" json:"Word,omitempty"`
}

func (x *WordData) Reset() {
	*x = WordData{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordData) ProtoMessage() {}

func (x *WordData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordData.ProtoReflect.Descriptor instead.
func (*WordData) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{14}
}

func (x *WordData) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WordData) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type DataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageCode string      `protobuf:"bytes,1,opt,name=LanguageCode,proto3" json:"LanguageCode,omitempty"`
	Words        []*WordData `protobuf:"bytes,2,rep,name=Words,proto3" json:"Words,omitempty"`
}

func (x *DataSet) Reset() {
	*x = DataSet{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSet) ProtoMessage() {}

func (x *DataSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSet.ProtoReflect.Descriptor instead.
func (*DataSet) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{15}
}

func (x *DataSet) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *DataSet) GetWords() []*WordData {
	if x != nil {
		return x.Words
	}
	return nil
}

type GetListBanWordsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DataSet `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetListBanWordsRes) Reset() {
	*x = GetListBanWordsRes{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListBanWordsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListBanWordsRes) ProtoMessage() {}

func (x *GetListBanWordsRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListBanWordsRes.ProtoReflect.Descriptor instead.
func (*GetListBanWordsRes) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetListBanWordsRes) GetData() []*DataSet {
	if x != nil {
		return x.Data
	}
	return nil
}

type EditWordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *EditWordReq) Reset() {
	*x = EditWordReq{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditWordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditWordReq) ProtoMessage() {}

func (x *EditWordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditWordReq.ProtoReflect.Descriptor instead.
func (*EditWordReq) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{17}
}

func (x *EditWordReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *EditWordReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type EditWordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *EditWordRes) Reset() {
	*x = EditWordRes{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditWordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditWordRes) ProtoMessage() {}

func (x *EditWordRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditWordRes.ProtoReflect.Descriptor instead.
func (*EditWordRes) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{18}
}

func (x *EditWordRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteWordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteWordReq) Reset() {
	*x = DeleteWordReq{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWordReq) ProtoMessage() {}

func (x *DeleteWordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWordReq.ProtoReflect.Descriptor instead.
func (*DeleteWordReq) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteWordReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteWordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *DeleteWordRes) Reset() {
	*x = DeleteWordRes{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWordRes) ProtoMessage() {}

func (x *DeleteWordRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWordRes.ProtoReflect.Descriptor instead.
func (*DeleteWordRes) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteWordRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AddWordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAccountID uint32 `protobuf:"varint,1,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
	Content          string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	LanguageCode     string `protobuf:"bytes,3,opt,name=LanguageCode,proto3" json:"LanguageCode,omitempty"`
}

func (x *AddWordReq) Reset() {
	*x = AddWordReq{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWordReq) ProtoMessage() {}

func (x *AddWordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWordReq.ProtoReflect.Descriptor instead.
func (*AddWordReq) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{21}
}

func (x *AddWordReq) GetRequestAccountID() uint32 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

func (x *AddWordReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddWordReq) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type AddWordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ID      uint32 `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AddWordRes) Reset() {
	*x = AddWordRes{}
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWordRes) ProtoMessage() {}

func (x *AddWordRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moderation_service_moderation_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWordRes.ProtoReflect.Descriptor instead.
func (*AddWordRes) Descriptor() ([]byte, []int) {
	return file_proto_moderation_service_moderation_service_proto_rawDescGZIP(), []int{22}
}

func (x *AddWordRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddWordRes) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

var File_proto_moderation_service_moderation_service_proto protoreflect.FileDescriptor

var file_proto_moderation_service_moderation_service_proto_rawDesc = []byte{
	0x0a, 0x31, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x39, 0x0a, 0x1d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x1e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x0a,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x0d, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x65, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x6e, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4f,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x71, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x42,
	0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x22, 0x78, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6f,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x2e,
	0x0a, 0x08, 0x57, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x59,
	0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74,
	0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x27, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x36,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x32, 0xde, 0x07, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x16,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x10, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x19, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x1c, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x24, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x1a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x22,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x61, 0x6e, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x61, 0x6e, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x61, 0x6e, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x45, 0x64,
	0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64,
	0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x42, 0x16, 0x5a, 0x14, 0x2e, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_moderation_service_moderation_service_proto_rawDescOnce sync.Once
	file_proto_moderation_service_moderation_service_proto_rawDescData = file_proto_moderation_service_moderation_service_proto_rawDesc
)

func file_proto_moderation_service_moderation_service_proto_rawDescGZIP() []byte {
	file_proto_moderation_service_moderation_service_proto_rawDescOnce.Do(func() {
		file_proto_moderation_service_moderation_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_moderation_service_moderation_service_proto_rawDescData)
	})
	return file_proto_moderation_service_moderation_service_proto_rawDescData
}

var file_proto_moderation_service_moderation_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_moderation_service_moderation_service_proto_goTypes = []any{
	(*IdentifyAndReplaceTextRequest)(nil),  // 0: moderation.IdentifyAndReplaceTextRequest
	(*IdentifyAndReplaceTextResponse)(nil), // 1: moderation.IdentifyAndReplaceTextResponse
	(*ReportPost)(nil),                     // 2: moderation.ReportPost
	(*ReportAccount)(nil),                  // 3: moderation.ReportAccount
	(*ResolveReportedPost)(nil),            // 4: moderation.ResolveReportedPost
	(*ResolveReportedAccount)(nil),         // 5: moderation.ResolveReportedAccount
	(*SingleLineStatusResponse)(nil),       // 6: moderation.SingleLineStatusResponse
	(*GetReportedAccountListRequest)(nil),  // 7: moderation.GetReportedAccountListRequest
	(*ReportAccountData)(nil),              // 8: moderation.ReportAccountData
	(*GetReportedAccountListResponse)(nil), // 9: moderation.GetReportedAccountListResponse
	(*GetReportedPostRequest)(nil),         // 10: moderation.GetReportedPostRequest
	(*GetReportedPostResponse)(nil),        // 11: moderation.GetReportedPostResponse
	(*ReportedPostData)(nil),               // 12: moderation.ReportedPostData
	(*GetListBanWordsReq)(nil),             // 13: moderation.GetListBanWordsReq
	(*WordData)(nil),                       // 14: moderation.WordData
	(*DataSet)(nil),                        // 15: moderation.DataSet
	(*GetListBanWordsRes)(nil),             // 16: moderation.GetListBanWordsRes
	(*EditWordReq)(nil),                    // 17: moderation.EditWordReq
	(*EditWordRes)(nil),                    // 18: moderation.EditWordRes
	(*DeleteWordReq)(nil),                  // 19: moderation.DeleteWordReq
	(*DeleteWordRes)(nil),                  // 20: moderation.DeleteWordRes
	(*AddWordReq)(nil),                     // 21: moderation.AddWordReq
	(*AddWordRes)(nil),                     // 22: moderation.AddWordRes
}
var file_proto_moderation_service_moderation_service_proto_depIdxs = []int32{
	8,  // 0: moderation.GetReportedAccountListResponse.Data:type_name -> moderation.ReportAccountData
	12, // 1: moderation.GetReportedPostResponse.ReportedPosts:type_name -> moderation.ReportedPostData
	14, // 2: moderation.DataSet.Words:type_name -> moderation.WordData
	15, // 3: moderation.GetListBanWordsRes.Data:type_name -> moderation.DataSet
	0,  // 4: moderation.ModerationService.IdentifyAndReplaceText:input_type -> moderation.IdentifyAndReplaceTextRequest
	2,  // 5: moderation.ModerationService.HandleReportPost:input_type -> moderation.ReportPost
	3,  // 6: moderation.ModerationService.HandleReportAccount:input_type -> moderation.ReportAccount
	4,  // 7: moderation.ModerationService.HandleResolveReportedPost:input_type -> moderation.ResolveReportedPost
	5,  // 8: moderation.ModerationService.HandleResolveReportedAccount:input_type -> moderation.ResolveReportedAccount
	7,  // 9: moderation.ModerationService.HandleGetReportAccountList:input_type -> moderation.GetReportedAccountListRequest
	10, // 10: moderation.ModerationService.GetReportedPosts:input_type -> moderation.GetReportedPostRequest
	13, // 11: moderation.ModerationService.GetListBanWords:input_type -> moderation.GetListBanWordsReq
	17, // 12: moderation.ModerationService.EditWord:input_type -> moderation.EditWordReq
	19, // 13: moderation.ModerationService.DeleteWord:input_type -> moderation.DeleteWordReq
	21, // 14: moderation.ModerationService.AddWord:input_type -> moderation.AddWordReq
	1,  // 15: moderation.ModerationService.IdentifyAndReplaceText:output_type -> moderation.IdentifyAndReplaceTextResponse
	6,  // 16: moderation.ModerationService.HandleReportPost:output_type -> moderation.SingleLineStatusResponse
	6,  // 17: moderation.ModerationService.HandleReportAccount:output_type -> moderation.SingleLineStatusResponse
	6,  // 18: moderation.ModerationService.HandleResolveReportedPost:output_type -> moderation.SingleLineStatusResponse
	6,  // 19: moderation.ModerationService.HandleResolveReportedAccount:output_type -> moderation.SingleLineStatusResponse
	9,  // 20: moderation.ModerationService.HandleGetReportAccountList:output_type -> moderation.GetReportedAccountListResponse
	11, // 21: moderation.ModerationService.GetReportedPosts:output_type -> moderation.GetReportedPostResponse
	16, // 22: moderation.ModerationService.GetListBanWords:output_type -> moderation.GetListBanWordsRes
	18, // 23: moderation.ModerationService.EditWord:output_type -> moderation.EditWordRes
	20, // 24: moderation.ModerationService.DeleteWord:output_type -> moderation.DeleteWordRes
	22, // 25: moderation.ModerationService.AddWord:output_type -> moderation.AddWordRes
	15, // [15:26] is the sub-list for method output_type
	4,  // [4:15] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_moderation_service_moderation_service_proto_init() }
func file_proto_moderation_service_moderation_service_proto_init() {
	if File_proto_moderation_service_moderation_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_moderation_service_moderation_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_moderation_service_moderation_service_proto_goTypes,
		DependencyIndexes: file_proto_moderation_service_moderation_service_proto_depIdxs,
		MessageInfos:      file_proto_moderation_service_moderation_service_proto_msgTypes,
	}.Build()
	File_proto_moderation_service_moderation_service_proto = out.File
	file_proto_moderation_service_moderation_service_proto_rawDesc = nil
	file_proto_moderation_service_moderation_service_proto_goTypes = nil
	file_proto_moderation_service_moderation_service_proto_depIdxs = nil
}
