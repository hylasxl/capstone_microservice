// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: proto/user_service/user_service.proto

package user_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	RoleId string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginResponse) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *LoginResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SignupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName   string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName    string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Birthday    int64  `protobuf:"varint,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender      string `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Email       string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Password    string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Username    string `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`
	PhoneNumber string `protobuf:"bytes,8,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Avatar      []byte `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *SignupRequest) Reset() {
	*x = SignupRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupRequest) ProtoMessage() {}

func (x *SignupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupRequest.ProtoReflect.Descriptor instead.
func (*SignupRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *SignupRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *SignupRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *SignupRequest) GetBirthday() int64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *SignupRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *SignupRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignupRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignupRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignupRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SignupRequest) GetAvatar() []byte {
	if x != nil {
		return x.Avatar
	}
	return nil
}

type SignupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *SignupResponse) Reset() {
	*x = SignupResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupResponse) ProtoMessage() {}

func (x *SignupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupResponse.ProtoReflect.Descriptor instead.
func (*SignupResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *SignupResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SignupResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type CheckExistingUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *CheckExistingUsernameRequest) Reset() {
	*x = CheckExistingUsernameRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckExistingUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExistingUsernameRequest) ProtoMessage() {}

func (x *CheckExistingUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExistingUsernameRequest.ProtoReflect.Descriptor instead.
func (*CheckExistingUsernameRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *CheckExistingUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CheckExistingUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExisting bool `protobuf:"varint,1,opt,name=isExisting,proto3" json:"isExisting,omitempty"`
}

func (x *CheckExistingUsernameResponse) Reset() {
	*x = CheckExistingUsernameResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckExistingUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExistingUsernameResponse) ProtoMessage() {}

func (x *CheckExistingUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExistingUsernameResponse.ProtoReflect.Descriptor instead.
func (*CheckExistingUsernameResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *CheckExistingUsernameResponse) GetIsExisting() bool {
	if x != nil {
		return x.IsExisting
	}
	return false
}

type CheckExistingEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CheckExistingEmailRequest) Reset() {
	*x = CheckExistingEmailRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckExistingEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExistingEmailRequest) ProtoMessage() {}

func (x *CheckExistingEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExistingEmailRequest.ProtoReflect.Descriptor instead.
func (*CheckExistingEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *CheckExistingEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CheckExistingEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExisting bool `protobuf:"varint,1,opt,name=isExisting,proto3" json:"isExisting,omitempty"`
}

func (x *CheckExistingEmailResponse) Reset() {
	*x = CheckExistingEmailResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckExistingEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExistingEmailResponse) ProtoMessage() {}

func (x *CheckExistingEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExistingEmailResponse.ProtoReflect.Descriptor instead.
func (*CheckExistingEmailResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{7}
}

func (x *CheckExistingEmailResponse) GetIsExisting() bool {
	if x != nil {
		return x.IsExisting
	}
	return false
}

type CheckExistingPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *CheckExistingPhoneRequest) Reset() {
	*x = CheckExistingPhoneRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckExistingPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExistingPhoneRequest) ProtoMessage() {}

func (x *CheckExistingPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExistingPhoneRequest.ProtoReflect.Descriptor instead.
func (*CheckExistingPhoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{8}
}

func (x *CheckExistingPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type CheckExistingPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExisting bool `protobuf:"varint,1,opt,name=isExisting,proto3" json:"isExisting,omitempty"`
}

func (x *CheckExistingPhoneResponse) Reset() {
	*x = CheckExistingPhoneResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckExistingPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExistingPhoneResponse) ProtoMessage() {}

func (x *CheckExistingPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExistingPhoneResponse.ProtoReflect.Descriptor instead.
func (*CheckExistingPhoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{9}
}

func (x *CheckExistingPhoneResponse) GetIsExisting() bool {
	if x != nil {
		return x.IsExisting
	}
	return false
}

type CheckValidUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CheckValidUserRequest) Reset() {
	*x = CheckValidUserRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckValidUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckValidUserRequest) ProtoMessage() {}

func (x *CheckValidUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckValidUserRequest.ProtoReflect.Descriptor instead.
func (*CheckValidUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{10}
}

func (x *CheckValidUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CheckValidUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid bool `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`
}

func (x *CheckValidUserResponse) Reset() {
	*x = CheckValidUserResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckValidUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckValidUserResponse) ProtoMessage() {}

func (x *CheckValidUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckValidUserResponse.ProtoReflect.Descriptor instead.
func (*CheckValidUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{11}
}

func (x *CheckValidUserResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type GetListAccountDisplayInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs []uint64 `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *GetListAccountDisplayInfoRequest) Reset() {
	*x = GetListAccountDisplayInfoRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListAccountDisplayInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListAccountDisplayInfoRequest) ProtoMessage() {}

func (x *GetListAccountDisplayInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListAccountDisplayInfoRequest.ProtoReflect.Descriptor instead.
func (*GetListAccountDisplayInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetListAccountDisplayInfoRequest) GetIDs() []uint64 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type GetListAccountDisplayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*SingleDisplayInfo `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Error string               `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetListAccountDisplayInfoResponse) Reset() {
	*x = GetListAccountDisplayInfoResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListAccountDisplayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListAccountDisplayInfoResponse) ProtoMessage() {}

func (x *GetListAccountDisplayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListAccountDisplayInfoResponse.ProtoReflect.Descriptor instead.
func (*GetListAccountDisplayInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetListAccountDisplayInfoResponse) GetInfos() []*SingleDisplayInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetListAccountDisplayInfoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SingleDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID   uint64 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	AvatarURL   string `protobuf:"bytes,3,opt,name=AvatarURL,proto3" json:"AvatarURL,omitempty"`
}

func (x *SingleDisplayInfo) Reset() {
	*x = SingleDisplayInfo{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleDisplayInfo) ProtoMessage() {}

func (x *SingleDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleDisplayInfo.ProtoReflect.Descriptor instead.
func (*SingleDisplayInfo) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{14}
}

func (x *SingleDisplayInfo) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *SingleDisplayInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *SingleDisplayInfo) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

type GetAccountInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *GetAccountInfoRequest) Reset() {
	*x = GetAccountInfoRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInfoRequest) ProtoMessage() {}

func (x *GetAccountInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetAccountInfoRequest) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type GetAccountInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint32       `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Account       *Account     `protobuf:"bytes,2,opt,name=Account,proto3" json:"Account,omitempty"`
	AccountInfo   *AccountInfo `protobuf:"bytes,3,opt,name=AccountInfo,proto3" json:"AccountInfo,omitempty"`
	AccountAvatar *Avatar      `protobuf:"bytes,4,opt,name=AccountAvatar,proto3" json:"AccountAvatar,omitempty"`
	Error         string       `protobuf:"bytes,5,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetAccountInfoResponse) Reset() {
	*x = GetAccountInfoResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInfoResponse) ProtoMessage() {}

func (x *GetAccountInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAccountInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetAccountInfoResponse) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *GetAccountInfoResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *GetAccountInfoResponse) GetAccountInfo() *AccountInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *GetAccountInfoResponse) GetAccountAvatar() *Avatar {
	if x != nil {
		return x.AccountAvatar
	}
	return nil
}

func (x *GetAccountInfoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	RoleID        uint32 `protobuf:"varint,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	CreateMethod  string `protobuf:"bytes,3,opt,name=CreateMethod,proto3" json:"CreateMethod,omitempty"`
	IsBanned      bool   `protobuf:"varint,4,opt,name=IsBanned,proto3" json:"IsBanned,omitempty"`
	IsRestricted  bool   `protobuf:"varint,5,opt,name=IsRestricted,proto3" json:"IsRestricted,omitempty"`
	IsSelfDeleted bool   `protobuf:"varint,6,opt,name=IsSelfDeleted,proto3" json:"IsSelfDeleted,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{17}
}

func (x *Account) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Account) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *Account) GetCreateMethod() string {
	if x != nil {
		return x.CreateMethod
	}
	return ""
}

func (x *Account) GetIsBanned() bool {
	if x != nil {
		return x.IsBanned
	}
	return false
}

func (x *Account) GetIsRestricted() bool {
	if x != nil {
		return x.IsRestricted
	}
	return false
}

func (x *Account) GetIsSelfDeleted() bool {
	if x != nil {
		return x.IsSelfDeleted
	}
	return false
}

type AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName       string `protobuf:"bytes,1,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName        string `protobuf:"bytes,2,opt,name=LastName,proto3" json:"LastName,omitempty"`
	DateOfBirth     int64  `protobuf:"varint,3,opt,name=DateOfBirth,proto3" json:"DateOfBirth,omitempty"`
	Gender          string `protobuf:"bytes,4,opt,name=Gender,proto3" json:"Gender,omitempty"`
	MaterialStatus  string `protobuf:"bytes,5,opt,name=MaterialStatus,proto3" json:"MaterialStatus,omitempty"`
	PhoneNumber     string `protobuf:"bytes,6,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	Email           string `protobuf:"bytes,7,opt,name=Email,proto3" json:"Email,omitempty"`
	NameDisplayType string `protobuf:"bytes,8,opt,name=NameDisplayType,proto3" json:"NameDisplayType,omitempty"`
	Bio             string `protobuf:"bytes,9,opt,name=Bio,proto3" json:"Bio,omitempty"`
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{18}
}

func (x *AccountInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AccountInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AccountInfo) GetDateOfBirth() int64 {
	if x != nil {
		return x.DateOfBirth
	}
	return 0
}

func (x *AccountInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *AccountInfo) GetMaterialStatus() string {
	if x != nil {
		return x.MaterialStatus
	}
	return ""
}

func (x *AccountInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AccountInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccountInfo) GetNameDisplayType() string {
	if x != nil {
		return x.NameDisplayType
	}
	return ""
}

func (x *AccountInfo) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type PrivacyIndices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateOfBirth    string `protobuf:"bytes,1,opt,name=DateOfBirth,proto3" json:"DateOfBirth,omitempty"`
	Gender         string `protobuf:"bytes,2,opt,name=Gender,proto3" json:"Gender,omitempty"`
	MaterialStatus string `protobuf:"bytes,3,opt,name=MaterialStatus,proto3" json:"MaterialStatus,omitempty"`
	Phone          string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Email          string `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	Bio            string `protobuf:"bytes,6,opt,name=Bio,proto3" json:"Bio,omitempty"`
}

func (x *PrivacyIndices) Reset() {
	*x = PrivacyIndices{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivacyIndices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivacyIndices) ProtoMessage() {}

func (x *PrivacyIndices) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivacyIndices.ProtoReflect.Descriptor instead.
func (*PrivacyIndices) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{19}
}

func (x *PrivacyIndices) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *PrivacyIndices) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PrivacyIndices) GetMaterialStatus() string {
	if x != nil {
		return x.MaterialStatus
	}
	return ""
}

func (x *PrivacyIndices) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PrivacyIndices) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PrivacyIndices) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type Avatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AvatarURL string `protobuf:"bytes,2,opt,name=AvatarURL,proto3" json:"AvatarURL,omitempty"`
	IsInUse   bool   `protobuf:"varint,3,opt,name=IsInUse,proto3" json:"IsInUse,omitempty"`
	IsDeleted bool   `protobuf:"varint,4,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
}

func (x *Avatar) Reset() {
	*x = Avatar{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Avatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Avatar) ProtoMessage() {}

func (x *Avatar) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Avatar.ProtoReflect.Descriptor instead.
func (*Avatar) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{20}
}

func (x *Avatar) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Avatar) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

func (x *Avatar) GetIsInUse() bool {
	if x != nil {
		return x.IsInUse
	}
	return false
}

func (x *Avatar) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type GetProfileInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAccountID uint32          `protobuf:"varint,1,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
	TargetAccountID  uint32          `protobuf:"varint,2,opt,name=TargetAccountID,proto3" json:"TargetAccountID,omitempty"`
	IsFriend         bool            `protobuf:"varint,3,opt,name=IsFriend,proto3" json:"IsFriend,omitempty"`
	IsBlocked        bool            `protobuf:"varint,4,opt,name=IsBlocked,proto3" json:"IsBlocked,omitempty"`
	IsFollow         bool            `protobuf:"varint,5,opt,name=IsFollow,proto3" json:"IsFollow,omitempty"`
	Privacy          *PrivacyIndices `protobuf:"bytes,6,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
}

func (x *GetProfileInfoRequest) Reset() {
	*x = GetProfileInfoRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProfileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileInfoRequest) ProtoMessage() {}

func (x *GetProfileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileInfoRequest.ProtoReflect.Descriptor instead.
func (*GetProfileInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetProfileInfoRequest) GetRequestAccountID() uint32 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

func (x *GetProfileInfoRequest) GetTargetAccountID() uint32 {
	if x != nil {
		return x.TargetAccountID
	}
	return 0
}

func (x *GetProfileInfoRequest) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

func (x *GetProfileInfoRequest) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *GetProfileInfoRequest) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

func (x *GetProfileInfoRequest) GetPrivacy() *PrivacyIndices {
	if x != nil {
		return x.Privacy
	}
	return nil
}

type GetProfileInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint32          `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Account       *Account        `protobuf:"bytes,2,opt,name=Account,proto3" json:"Account,omitempty"`
	AccountInfo   *AccountInfo    `protobuf:"bytes,3,opt,name=AccountInfo,proto3" json:"AccountInfo,omitempty"`
	AccountAvatar *Avatar         `protobuf:"bytes,4,opt,name=AccountAvatar,proto3" json:"AccountAvatar,omitempty"`
	Privacy       *PrivacyIndices `protobuf:"bytes,5,opt,name=Privacy,proto3" json:"Privacy,omitempty"`
	IsFriend      bool            `protobuf:"varint,6,opt,name=IsFriend,proto3" json:"IsFriend,omitempty"`
	IsBlocked     bool            `protobuf:"varint,7,opt,name=IsBlocked,proto3" json:"IsBlocked,omitempty"`
	IsFollow      bool            `protobuf:"varint,8,opt,name=IsFollow,proto3" json:"IsFollow,omitempty"`
	Timestamp     int64           `protobuf:"varint,9,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Error         string          `protobuf:"bytes,10,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetProfileInfoResponse) Reset() {
	*x = GetProfileInfoResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProfileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileInfoResponse) ProtoMessage() {}

func (x *GetProfileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileInfoResponse.ProtoReflect.Descriptor instead.
func (*GetProfileInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetProfileInfoResponse) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *GetProfileInfoResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *GetProfileInfoResponse) GetAccountInfo() *AccountInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *GetProfileInfoResponse) GetAccountAvatar() *Avatar {
	if x != nil {
		return x.AccountAvatar
	}
	return nil
}

func (x *GetProfileInfoResponse) GetPrivacy() *PrivacyIndices {
	if x != nil {
		return x.Privacy
	}
	return nil
}

func (x *GetProfileInfoResponse) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

func (x *GetProfileInfoResponse) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *GetProfileInfoResponse) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

func (x *GetProfileInfoResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GetProfileInfoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ChangeAccountDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint64 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	DataFieldName string `protobuf:"bytes,2,opt,name=DataFieldName,proto3" json:"DataFieldName,omitempty"`
	Data          string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ChangeAccountDataRequest) Reset() {
	*x = ChangeAccountDataRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAccountDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAccountDataRequest) ProtoMessage() {}

func (x *ChangeAccountDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAccountDataRequest.ProtoReflect.Descriptor instead.
func (*ChangeAccountDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{23}
}

func (x *ChangeAccountDataRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ChangeAccountDataRequest) GetDataFieldName() string {
	if x != nil {
		return x.DataFieldName
	}
	return ""
}

func (x *ChangeAccountDataRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ChangeAccountDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *ChangeAccountDataResponse) Reset() {
	*x = ChangeAccountDataResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAccountDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAccountDataResponse) ProtoMessage() {}

func (x *ChangeAccountDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAccountDataResponse.ProtoReflect.Descriptor instead.
func (*ChangeAccountDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{24}
}

func (x *ChangeAccountDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ChangeAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar    []byte `protobuf:"bytes,1,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *ChangeAvatarRequest) Reset() {
	*x = ChangeAvatarRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarRequest) ProtoMessage() {}

func (x *ChangeAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarRequest.ProtoReflect.Descriptor instead.
func (*ChangeAvatarRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{25}
}

func (x *ChangeAvatarRequest) GetAvatar() []byte {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *ChangeAvatarRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type ChangeAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *ChangeAvatarResponse) Reset() {
	*x = ChangeAvatarResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarResponse) ProtoMessage() {}

func (x *ChangeAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarResponse.ProtoReflect.Descriptor instead.
func (*ChangeAvatarResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{26}
}

func (x *ChangeAvatarResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LoginWithGoogleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email       string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	DisplayName string `protobuf:"bytes,2,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	PhotoURL    string `protobuf:"bytes,3,opt,name=PhotoURL,proto3" json:"PhotoURL,omitempty"`
	AuthCode    string `protobuf:"bytes,4,opt,name=AuthCode,proto3" json:"AuthCode,omitempty"`
}

func (x *LoginWithGoogleRequest) Reset() {
	*x = LoginWithGoogleRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginWithGoogleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithGoogleRequest) ProtoMessage() {}

func (x *LoginWithGoogleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithGoogleRequest.ProtoReflect.Descriptor instead.
func (*LoginWithGoogleRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{27}
}

func (x *LoginWithGoogleRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginWithGoogleRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *LoginWithGoogleRequest) GetPhotoURL() string {
	if x != nil {
		return x.PhotoURL
	}
	return ""
}

func (x *LoginWithGoogleRequest) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

type LoginWithGoogleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *LoginWithGoogleResponse) Reset() {
	*x = LoginWithGoogleResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginWithGoogleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithGoogleResponse) ProtoMessage() {}

func (x *LoginWithGoogleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithGoogleResponse.ProtoReflect.Descriptor instead.
func (*LoginWithGoogleResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{28}
}

func (x *LoginWithGoogleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginWithGoogleResponse) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type VerifyUsernameAndEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *VerifyUsernameAndEmailRequest) Reset() {
	*x = VerifyUsernameAndEmailRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyUsernameAndEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUsernameAndEmailRequest) ProtoMessage() {}

func (x *VerifyUsernameAndEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUsernameAndEmailRequest.ProtoReflect.Descriptor instead.
func (*VerifyUsernameAndEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{29}
}

func (x *VerifyUsernameAndEmailRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *VerifyUsernameAndEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type VerifyUsernameAndEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	UserID  int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *VerifyUsernameAndEmailResponse) Reset() {
	*x = VerifyUsernameAndEmailResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyUsernameAndEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyUsernameAndEmailResponse) ProtoMessage() {}

func (x *VerifyUsernameAndEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyUsernameAndEmailResponse.ProtoReflect.Descriptor instead.
func (*VerifyUsernameAndEmailResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{30}
}

func (x *VerifyUsernameAndEmailResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VerifyUsernameAndEmailResponse) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type ChangePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID   uint64 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=NewPassword,proto3" json:"NewPassword,omitempty"`
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{31}
}

func (x *ChangePasswordRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ChangePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type ChangePasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *ChangePasswordResponse) Reset() {
	*x = ChangePasswordResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordResponse) ProtoMessage() {}

func (x *ChangePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordResponse.ProtoReflect.Descriptor instead.
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{32}
}

func (x *ChangePasswordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CustomDeleteAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Method    string `protobuf:"bytes,2,opt,name=Method,proto3" json:"Method,omitempty"`
}

func (x *CustomDeleteAccountRequest) Reset() {
	*x = CustomDeleteAccountRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomDeleteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDeleteAccountRequest) ProtoMessage() {}

func (x *CustomDeleteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDeleteAccountRequest.ProtoReflect.Descriptor instead.
func (*CustomDeleteAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{33}
}

func (x *CustomDeleteAccountRequest) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *CustomDeleteAccountRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type CustomDeleteAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *CustomDeleteAccountResponse) Reset() {
	*x = CustomDeleteAccountResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomDeleteAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDeleteAccountResponse) ProtoMessage() {}

func (x *CustomDeleteAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDeleteAccountResponse.ProtoReflect.Descriptor instead.
func (*CustomDeleteAccountResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{34}
}

func (x *CustomDeleteAccountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SearchAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAccountID uint32   `protobuf:"varint,1,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
	BlockList        []uint32 `protobuf:"varint,2,rep,packed,name=BlockList,proto3" json:"BlockList,omitempty"`
	BlockedList      []uint32 `protobuf:"varint,3,rep,packed,name=BlockedList,proto3" json:"BlockedList,omitempty"`
	QueryString      string   `protobuf:"bytes,4,opt,name=QueryString,proto3" json:"QueryString,omitempty"`
	Page             uint32   `protobuf:"varint,5,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize         uint32   `protobuf:"varint,6,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *SearchAccountRequest) Reset() {
	*x = SearchAccountRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAccountRequest) ProtoMessage() {}

func (x *SearchAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAccountRequest.ProtoReflect.Descriptor instead.
func (*SearchAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{35}
}

func (x *SearchAccountRequest) GetRequestAccountID() uint32 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

func (x *SearchAccountRequest) GetBlockList() []uint32 {
	if x != nil {
		return x.BlockList
	}
	return nil
}

func (x *SearchAccountRequest) GetBlockedList() []uint32 {
	if x != nil {
		return x.BlockedList
	}
	return nil
}

func (x *SearchAccountRequest) GetQueryString() string {
	if x != nil {
		return x.QueryString
	}
	return ""
}

func (x *SearchAccountRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAccountRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  []*SingleDisplayInfo `protobuf:"bytes,1,rep,name=Account,proto3" json:"Account,omitempty"`
	Page     uint32               `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize uint32               `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *SearchAccountResponse) Reset() {
	*x = SearchAccountResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAccountResponse) ProtoMessage() {}

func (x *SearchAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAccountResponse.ProtoReflect.Descriptor instead.
func (*SearchAccountResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{36}
}

func (x *SearchAccountResponse) GetAccount() []*SingleDisplayInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *SearchAccountResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAccountResponse) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetNewRegisterationDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAccountID uint32 `protobuf:"varint,1,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
	PeriodLabel      string `protobuf:"bytes,2,opt,name=PeriodLabel,proto3" json:"PeriodLabel,omitempty"`
	PeriodData       uint32 `protobuf:"varint,3,opt,name=PeriodData,proto3" json:"PeriodData,omitempty"`
}

func (x *GetNewRegisterationDataRequest) Reset() {
	*x = GetNewRegisterationDataRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewRegisterationDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewRegisterationDataRequest) ProtoMessage() {}

func (x *GetNewRegisterationDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewRegisterationDataRequest.ProtoReflect.Descriptor instead.
func (*GetNewRegisterationDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetNewRegisterationDataRequest) GetRequestAccountID() uint32 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

func (x *GetNewRegisterationDataRequest) GetPeriodLabel() string {
	if x != nil {
		return x.PeriodLabel
	}
	return ""
}

func (x *GetNewRegisterationDataRequest) GetPeriodData() uint32 {
	if x != nil {
		return x.PeriodData
	}
	return 0
}

type GetNewRegisterationDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAccountID uint32       `protobuf:"varint,1,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
	PeriodLabel      string       `protobuf:"bytes,2,opt,name=PeriodLabel,proto3" json:"PeriodLabel,omitempty"`
	TotalUsers       uint64       `protobuf:"varint,3,opt,name=TotalUsers,proto3" json:"TotalUsers,omitempty"`
	Data             []*DataTerms `protobuf:"bytes,4,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetNewRegisterationDataResponse) Reset() {
	*x = GetNewRegisterationDataResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewRegisterationDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewRegisterationDataResponse) ProtoMessage() {}

func (x *GetNewRegisterationDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewRegisterationDataResponse.ProtoReflect.Descriptor instead.
func (*GetNewRegisterationDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetNewRegisterationDataResponse) GetRequestAccountID() uint32 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

func (x *GetNewRegisterationDataResponse) GetPeriodLabel() string {
	if x != nil {
		return x.PeriodLabel
	}
	return ""
}

func (x *GetNewRegisterationDataResponse) GetTotalUsers() uint64 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *GetNewRegisterationDataResponse) GetData() []*DataTerms {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=Label,proto3" json:"Label,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *DataTerms) Reset() {
	*x = DataTerms{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTerms) ProtoMessage() {}

func (x *DataTerms) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTerms.ProtoReflect.Descriptor instead.
func (*DataTerms) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{39}
}

func (x *DataTerms) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DataTerms) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountTypeUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAccountID uint32 `protobuf:"varint,1,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
}

func (x *CountTypeUserRequest) Reset() {
	*x = CountTypeUserRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountTypeUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTypeUserRequest) ProtoMessage() {}

func (x *CountTypeUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTypeUserRequest.ProtoReflect.Descriptor instead.
func (*CountTypeUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{40}
}

func (x *CountTypeUserRequest) GetRequestAccountID() uint32 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

type CountTypeUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAccountID uint32 `protobuf:"varint,1,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
	TotalUsers       uint64 `protobuf:"varint,2,opt,name=TotalUsers,proto3" json:"TotalUsers,omitempty"`
	BannedUsers      uint64 `protobuf:"varint,3,opt,name=BannedUsers,proto3" json:"BannedUsers,omitempty"`
	DeletedUsers     uint64 `protobuf:"varint,4,opt,name=DeletedUsers,proto3" json:"DeletedUsers,omitempty"`
}

func (x *CountTypeUserResponse) Reset() {
	*x = CountTypeUserResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountTypeUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTypeUserResponse) ProtoMessage() {}

func (x *CountTypeUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTypeUserResponse.ProtoReflect.Descriptor instead.
func (*CountTypeUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{41}
}

func (x *CountTypeUserResponse) GetRequestAccountID() uint32 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

func (x *CountTypeUserResponse) GetTotalUsers() uint64 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *CountTypeUserResponse) GetBannedUsers() uint64 {
	if x != nil {
		return x.BannedUsers
	}
	return 0
}

func (x *CountTypeUserResponse) GetDeletedUsers() uint64 {
	if x != nil {
		return x.DeletedUsers
	}
	return 0
}

type GetAccountListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID uint32 `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Page      uint32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize  uint32 `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *GetAccountListRequest) Reset() {
	*x = GetAccountListRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountListRequest) ProtoMessage() {}

func (x *GetAccountListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountListRequest.ProtoReflect.Descriptor instead.
func (*GetAccountListRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetAccountListRequest) GetRequestID() uint32 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *GetAccountListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAccountListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type AccountRawInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Username      string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	IsBanned      bool   `protobuf:"varint,3,opt,name=IsBanned,proto3" json:"IsBanned,omitempty"`
	Method        string `protobuf:"bytes,4,opt,name=Method,proto3" json:"Method,omitempty"`
	IsSelfDeleted bool   `protobuf:"varint,5,opt,name=IsSelfDeleted,proto3" json:"IsSelfDeleted,omitempty"`
}

func (x *AccountRawInfo) Reset() {
	*x = AccountRawInfo{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRawInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRawInfo) ProtoMessage() {}

func (x *AccountRawInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRawInfo.ProtoReflect.Descriptor instead.
func (*AccountRawInfo) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{43}
}

func (x *AccountRawInfo) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *AccountRawInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccountRawInfo) GetIsBanned() bool {
	if x != nil {
		return x.IsBanned
	}
	return false
}

func (x *AccountRawInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AccountRawInfo) GetIsSelfDeleted() bool {
	if x != nil {
		return x.IsSelfDeleted
	}
	return false
}

type GetAccountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*AccountRawInfo `protobuf:"bytes,1,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
	Page     uint32            `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize uint32            `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *GetAccountListResponse) Reset() {
	*x = GetAccountListResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountListResponse) ProtoMessage() {}

func (x *GetAccountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountListResponse.ProtoReflect.Descriptor instead.
func (*GetAccountListResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{44}
}

func (x *GetAccountListResponse) GetAccounts() []*AccountRawInfo {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GetAccountListResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAccountListResponse) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchAccountListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID   uint32 `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	QueryString string `protobuf:"bytes,2,opt,name=QueryString,proto3" json:"QueryString,omitempty"`
	Page        uint32 `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize    uint32 `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *SearchAccountListRequest) Reset() {
	*x = SearchAccountListRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAccountListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAccountListRequest) ProtoMessage() {}

func (x *SearchAccountListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAccountListRequest.ProtoReflect.Descriptor instead.
func (*SearchAccountListRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{45}
}

func (x *SearchAccountListRequest) GetRequestID() uint32 {
	if x != nil {
		return x.RequestID
	}
	return 0
}

func (x *SearchAccountListRequest) GetQueryString() string {
	if x != nil {
		return x.QueryString
	}
	return ""
}

func (x *SearchAccountListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAccountListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchAccountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*AccountRawInfo `protobuf:"bytes,1,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
	Page     uint32            `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize uint32            `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *SearchAccountListResponse) Reset() {
	*x = SearchAccountListResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAccountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAccountListResponse) ProtoMessage() {}

func (x *SearchAccountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAccountListResponse.ProtoReflect.Descriptor instead.
func (*SearchAccountListResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{46}
}

func (x *SearchAccountListResponse) GetAccounts() []*AccountRawInfo {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *SearchAccountListResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAccountListResponse) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ResolveBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Action    string `protobuf:"bytes,2,opt,name=Action,proto3" json:"Action,omitempty"`
}

func (x *ResolveBanRequest) Reset() {
	*x = ResolveBanRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveBanRequest) ProtoMessage() {}

func (x *ResolveBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveBanRequest.ProtoReflect.Descriptor instead.
func (*ResolveBanRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{47}
}

func (x *ResolveBanRequest) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ResolveBanRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type ResolveBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *ResolveBanResponse) Reset() {
	*x = ResolveBanResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveBanResponse) ProtoMessage() {}

func (x *ResolveBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveBanResponse.ProtoReflect.Descriptor instead.
func (*ResolveBanResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{48}
}

func (x *ResolveBanResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *GetUsernameRequest) Reset() {
	*x = GetUsernameRequest{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsernameRequest) ProtoMessage() {}

func (x *GetUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetUsernameRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetUsernameRequest) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type GetUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
}

func (x *GetUsernameResponse) Reset() {
	*x = GetUsernameResponse{}
	mi := &file_proto_user_service_user_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsernameResponse) ProtoMessage() {}

func (x *GetUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_user_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsernameResponse.ProtoReflect.Descriptor instead.
func (*GetUsernameResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_user_service_proto_rawDescGZIP(), []int{50}
}

func (x *GetUsernameResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

var File_proto_user_service_user_service_proto protoreflect.FileDescriptor

var file_proto_user_service_user_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x46, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x55, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x85, 0x02, 0x0a,
	0x0d, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1c, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3c, 0x0a, 0x1a, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x31, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x3c, 0x0a, 0x1a, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x2f, 0x0a, 0x15, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x34,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x03, 0x49, 0x44, 0x73, 0x22, 0x68, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x71,
	0x0a, 0x11, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52, 0x4c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52,
	0x4c, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xde, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x27, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc7, 0x01, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x52,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x49, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x49, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0x9d, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x42, 0x69, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x42, 0x69, 0x6f, 0x22, 0x6e, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x49, 0x73, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xf3, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x2e, 0x0a, 0x07,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x22, 0x82, 0x03, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x07,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x72, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4b, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x14, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x16,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x51, 0x0a, 0x17, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x1d, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x52, 0x0a, 0x1e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x57, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65,
	0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0a,
	0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x22, 0x37, 0x0a, 0x1b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x7a, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8e, 0x01,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb4,
	0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x23, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x42,
	0x0a, 0x14, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0xa9, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x65,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x53, 0x65, 0x6c, 0x66,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49,
	0x73, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x7a, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7d, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x2e, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x32, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xfc, 0x0d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e,
	0x75, 0x70, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a,
	0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x19, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x12, 0x17,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_user_service_user_service_proto_rawDescOnce sync.Once
	file_proto_user_service_user_service_proto_rawDescData = file_proto_user_service_user_service_proto_rawDesc
)

func file_proto_user_service_user_service_proto_rawDescGZIP() []byte {
	file_proto_user_service_user_service_proto_rawDescOnce.Do(func() {
		file_proto_user_service_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_service_user_service_proto_rawDescData)
	})
	return file_proto_user_service_user_service_proto_rawDescData
}

var file_proto_user_service_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_proto_user_service_user_service_proto_goTypes = []any{
	(*LoginRequest)(nil),                      // 0: user.LoginRequest
	(*LoginResponse)(nil),                     // 1: user.LoginResponse
	(*SignupRequest)(nil),                     // 2: user.SignupRequest
	(*SignupResponse)(nil),                    // 3: user.SignupResponse
	(*CheckExistingUsernameRequest)(nil),      // 4: user.CheckExistingUsernameRequest
	(*CheckExistingUsernameResponse)(nil),     // 5: user.CheckExistingUsernameResponse
	(*CheckExistingEmailRequest)(nil),         // 6: user.CheckExistingEmailRequest
	(*CheckExistingEmailResponse)(nil),        // 7: user.CheckExistingEmailResponse
	(*CheckExistingPhoneRequest)(nil),         // 8: user.CheckExistingPhoneRequest
	(*CheckExistingPhoneResponse)(nil),        // 9: user.CheckExistingPhoneResponse
	(*CheckValidUserRequest)(nil),             // 10: user.CheckValidUserRequest
	(*CheckValidUserResponse)(nil),            // 11: user.CheckValidUserResponse
	(*GetListAccountDisplayInfoRequest)(nil),  // 12: user.GetListAccountDisplayInfoRequest
	(*GetListAccountDisplayInfoResponse)(nil), // 13: user.GetListAccountDisplayInfoResponse
	(*SingleDisplayInfo)(nil),                 // 14: user.SingleDisplayInfo
	(*GetAccountInfoRequest)(nil),             // 15: user.GetAccountInfoRequest
	(*GetAccountInfoResponse)(nil),            // 16: user.GetAccountInfoResponse
	(*Account)(nil),                           // 17: user.Account
	(*AccountInfo)(nil),                       // 18: user.AccountInfo
	(*PrivacyIndices)(nil),                    // 19: user.PrivacyIndices
	(*Avatar)(nil),                            // 20: user.Avatar
	(*GetProfileInfoRequest)(nil),             // 21: user.GetProfileInfoRequest
	(*GetProfileInfoResponse)(nil),            // 22: user.GetProfileInfoResponse
	(*ChangeAccountDataRequest)(nil),          // 23: user.ChangeAccountDataRequest
	(*ChangeAccountDataResponse)(nil),         // 24: user.ChangeAccountDataResponse
	(*ChangeAvatarRequest)(nil),               // 25: user.ChangeAvatarRequest
	(*ChangeAvatarResponse)(nil),              // 26: user.ChangeAvatarResponse
	(*LoginWithGoogleRequest)(nil),            // 27: user.LoginWithGoogleRequest
	(*LoginWithGoogleResponse)(nil),           // 28: user.LoginWithGoogleResponse
	(*VerifyUsernameAndEmailRequest)(nil),     // 29: user.VerifyUsernameAndEmailRequest
	(*VerifyUsernameAndEmailResponse)(nil),    // 30: user.VerifyUsernameAndEmailResponse
	(*ChangePasswordRequest)(nil),             // 31: user.ChangePasswordRequest
	(*ChangePasswordResponse)(nil),            // 32: user.ChangePasswordResponse
	(*CustomDeleteAccountRequest)(nil),        // 33: user.CustomDeleteAccountRequest
	(*CustomDeleteAccountResponse)(nil),       // 34: user.CustomDeleteAccountResponse
	(*SearchAccountRequest)(nil),              // 35: user.SearchAccountRequest
	(*SearchAccountResponse)(nil),             // 36: user.SearchAccountResponse
	(*GetNewRegisterationDataRequest)(nil),    // 37: user.GetNewRegisterationDataRequest
	(*GetNewRegisterationDataResponse)(nil),   // 38: user.GetNewRegisterationDataResponse
	(*DataTerms)(nil),                         // 39: user.DataTerms
	(*CountTypeUserRequest)(nil),              // 40: user.CountTypeUserRequest
	(*CountTypeUserResponse)(nil),             // 41: user.CountTypeUserResponse
	(*GetAccountListRequest)(nil),             // 42: user.GetAccountListRequest
	(*AccountRawInfo)(nil),                    // 43: user.AccountRawInfo
	(*GetAccountListResponse)(nil),            // 44: user.GetAccountListResponse
	(*SearchAccountListRequest)(nil),          // 45: user.SearchAccountListRequest
	(*SearchAccountListResponse)(nil),         // 46: user.SearchAccountListResponse
	(*ResolveBanRequest)(nil),                 // 47: user.ResolveBanRequest
	(*ResolveBanResponse)(nil),                // 48: user.ResolveBanResponse
	(*GetUsernameRequest)(nil),                // 49: user.GetUsernameRequest
	(*GetUsernameResponse)(nil),               // 50: user.GetUsernameResponse
}
var file_proto_user_service_user_service_proto_depIdxs = []int32{
	14, // 0: user.GetListAccountDisplayInfoResponse.Infos:type_name -> user.SingleDisplayInfo
	17, // 1: user.GetAccountInfoResponse.Account:type_name -> user.Account
	18, // 2: user.GetAccountInfoResponse.AccountInfo:type_name -> user.AccountInfo
	20, // 3: user.GetAccountInfoResponse.AccountAvatar:type_name -> user.Avatar
	19, // 4: user.GetProfileInfoRequest.Privacy:type_name -> user.PrivacyIndices
	17, // 5: user.GetProfileInfoResponse.Account:type_name -> user.Account
	18, // 6: user.GetProfileInfoResponse.AccountInfo:type_name -> user.AccountInfo
	20, // 7: user.GetProfileInfoResponse.AccountAvatar:type_name -> user.Avatar
	19, // 8: user.GetProfileInfoResponse.Privacy:type_name -> user.PrivacyIndices
	14, // 9: user.SearchAccountResponse.Account:type_name -> user.SingleDisplayInfo
	39, // 10: user.GetNewRegisterationDataResponse.Data:type_name -> user.DataTerms
	43, // 11: user.GetAccountListResponse.Accounts:type_name -> user.AccountRawInfo
	43, // 12: user.SearchAccountListResponse.Accounts:type_name -> user.AccountRawInfo
	0,  // 13: user.UserService.Login:input_type -> user.LoginRequest
	2,  // 14: user.UserService.Signup:input_type -> user.SignupRequest
	4,  // 15: user.UserService.CheckExistingUsername:input_type -> user.CheckExistingUsernameRequest
	6,  // 16: user.UserService.CheckExistingEmail:input_type -> user.CheckExistingEmailRequest
	8,  // 17: user.UserService.CheckExistingPhone:input_type -> user.CheckExistingPhoneRequest
	10, // 18: user.UserService.CheckValidUser:input_type -> user.CheckValidUserRequest
	12, // 19: user.UserService.GetListAccountDisplayInfo:input_type -> user.GetListAccountDisplayInfoRequest
	15, // 20: user.UserService.GetAccountInfo:input_type -> user.GetAccountInfoRequest
	21, // 21: user.UserService.GetProfileInfo:input_type -> user.GetProfileInfoRequest
	23, // 22: user.UserService.ChangeAccountInfo:input_type -> user.ChangeAccountDataRequest
	25, // 23: user.UserService.ChangeAvatar:input_type -> user.ChangeAvatarRequest
	27, // 24: user.UserService.LoginWithGoogle:input_type -> user.LoginWithGoogleRequest
	29, // 25: user.UserService.VerifyUsernameAndEmail:input_type -> user.VerifyUsernameAndEmailRequest
	31, // 26: user.UserService.ChangePassword:input_type -> user.ChangePasswordRequest
	33, // 27: user.UserService.CustomDeleteAccount:input_type -> user.CustomDeleteAccountRequest
	35, // 28: user.UserService.SearchAccount:input_type -> user.SearchAccountRequest
	37, // 29: user.UserService.GetNewRegisterationData:input_type -> user.GetNewRegisterationDataRequest
	40, // 30: user.UserService.CountUserType:input_type -> user.CountTypeUserRequest
	42, // 31: user.UserService.GetAccountList:input_type -> user.GetAccountListRequest
	45, // 32: user.UserService.SearchAccountList:input_type -> user.SearchAccountListRequest
	47, // 33: user.UserService.ResolveBan:input_type -> user.ResolveBanRequest
	49, // 34: user.UserService.GetUsername:input_type -> user.GetUsernameRequest
	1,  // 35: user.UserService.Login:output_type -> user.LoginResponse
	3,  // 36: user.UserService.Signup:output_type -> user.SignupResponse
	5,  // 37: user.UserService.CheckExistingUsername:output_type -> user.CheckExistingUsernameResponse
	7,  // 38: user.UserService.CheckExistingEmail:output_type -> user.CheckExistingEmailResponse
	9,  // 39: user.UserService.CheckExistingPhone:output_type -> user.CheckExistingPhoneResponse
	11, // 40: user.UserService.CheckValidUser:output_type -> user.CheckValidUserResponse
	13, // 41: user.UserService.GetListAccountDisplayInfo:output_type -> user.GetListAccountDisplayInfoResponse
	16, // 42: user.UserService.GetAccountInfo:output_type -> user.GetAccountInfoResponse
	22, // 43: user.UserService.GetProfileInfo:output_type -> user.GetProfileInfoResponse
	24, // 44: user.UserService.ChangeAccountInfo:output_type -> user.ChangeAccountDataResponse
	26, // 45: user.UserService.ChangeAvatar:output_type -> user.ChangeAvatarResponse
	28, // 46: user.UserService.LoginWithGoogle:output_type -> user.LoginWithGoogleResponse
	30, // 47: user.UserService.VerifyUsernameAndEmail:output_type -> user.VerifyUsernameAndEmailResponse
	32, // 48: user.UserService.ChangePassword:output_type -> user.ChangePasswordResponse
	34, // 49: user.UserService.CustomDeleteAccount:output_type -> user.CustomDeleteAccountResponse
	36, // 50: user.UserService.SearchAccount:output_type -> user.SearchAccountResponse
	38, // 51: user.UserService.GetNewRegisterationData:output_type -> user.GetNewRegisterationDataResponse
	41, // 52: user.UserService.CountUserType:output_type -> user.CountTypeUserResponse
	44, // 53: user.UserService.GetAccountList:output_type -> user.GetAccountListResponse
	46, // 54: user.UserService.SearchAccountList:output_type -> user.SearchAccountListResponse
	48, // 55: user.UserService.ResolveBan:output_type -> user.ResolveBanResponse
	50, // 56: user.UserService.GetUsername:output_type -> user.GetUsernameResponse
	35, // [35:57] is the sub-list for method output_type
	13, // [13:35] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_user_service_user_service_proto_init() }
func file_proto_user_service_user_service_proto_init() {
	if File_proto_user_service_user_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_service_user_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_service_user_service_proto_goTypes,
		DependencyIndexes: file_proto_user_service_user_service_proto_depIdxs,
		MessageInfos:      file_proto_user_service_user_service_proto_msgTypes,
	}.Build()
	File_proto_user_service_user_service_proto = out.File
	file_proto_user_service_user_service_proto_rawDesc = nil
	file_proto_user_service_user_service_proto_goTypes = nil
	file_proto_user_service_user_service_proto_depIdxs = nil
}
