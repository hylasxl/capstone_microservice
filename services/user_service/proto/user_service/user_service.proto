syntax = "proto3";

option go_package = "./user_service";

package user;

service UserService {
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc Signup (SignupRequest) returns (SignupResponse);
  rpc CheckExistingUsername (CheckExistingUsernameRequest) returns (CheckExistingUsernameResponse);
  rpc CheckExistingEmail (CheckExistingEmailRequest) returns (CheckExistingEmailResponse);
  rpc CheckExistingPhone (CheckExistingPhoneRequest) returns (CheckExistingPhoneResponse);
  rpc CheckValidUser (CheckValidUserRequest) returns (CheckValidUserResponse);
  rpc GetListAccountDisplayInfo (GetListAccountDisplayInfoRequest) returns (GetListAccountDisplayInfoResponse);
  rpc GetAccountInfo (GetAccountInfoRequest) returns (GetAccountInfoResponse);
  rpc GetProfileInfo (GetProfileInfoRequest) returns (GetProfileInfoResponse);
  rpc ChangeAccountInfo (ChangeAccountDataRequest) returns (ChangeAccountDataResponse);
  rpc ChangeAvatar (ChangeAvatarRequest) returns (ChangeAvatarResponse);
  rpc LoginWithGoogle (LoginWithGoogleRequest) returns (LoginWithGoogleResponse);
  rpc VerifyUsernameAndEmail (VerifyUsernameAndEmailRequest) returns (VerifyUsernameAndEmailResponse);
  rpc ChangePassword (ChangePasswordRequest) returns (ChangePasswordResponse);
  rpc CustomDeleteAccount (CustomDeleteAccountRequest) returns (CustomDeleteAccountResponse);
  rpc SearchAccount (SearchAccountRequest) returns (SearchAccountResponse);
  rpc GetNewRegisterationData (GetNewRegisterationDataRequest) returns (GetNewRegisterationDataResponse);
  rpc CountUserType (CountTypeUserRequest) returns (CountTypeUserResponse);
  rpc GetAccountList (GetAccountListRequest) returns (GetAccountListResponse);
  rpc SearchAccountList (SearchAccountListRequest) returns (SearchAccountListResponse);
  rpc ResolveBan (ResolveBanRequest) returns (ResolveBanResponse);
  rpc GetUsername (GetUsernameRequest) returns (GetUsernameResponse);
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string userId = 1;
  string roleId = 2;
  string error = 3;
}


message SignupRequest {
  string firstName = 1;
  string lastName = 2;
  int64 birthday = 3;
  string gender = 4;
  string email = 5;
  string password = 6;
  string username = 7;
  string phoneNumber = 8;
  bytes avatar = 9;
}

message SignupResponse {
  string error = 1;
  string accountId = 2;
}

message CheckExistingUsernameRequest {
  string username = 1;
}

message CheckExistingUsernameResponse {
  bool isExisting = 1;
}

message CheckExistingEmailRequest {
  string email = 1;
}

message CheckExistingEmailResponse{
  bool isExisting = 1;
}

message CheckExistingPhoneRequest {
  string phone = 1;
}

message CheckExistingPhoneResponse{
  bool isExisting = 1;
}

message CheckValidUserRequest {
  string userId = 1;
}

message CheckValidUserResponse {
  bool isValid = 1;
}

message GetListAccountDisplayInfoRequest {
  repeated uint64 IDs = 1;
}

message GetListAccountDisplayInfoResponse {
  repeated SingleDisplayInfo Infos = 1;
  string Error = 2;
}

message SingleDisplayInfo {
  uint64 AccountID = 1;
  string DisplayName = 2;
  string AvatarURL = 3;
}

message GetAccountInfoRequest {
  uint32 AccountID = 1;
}

message GetAccountInfoResponse {
  uint32 AccountID = 1;
  Account Account = 2;
  AccountInfo AccountInfo = 3;
  Avatar AccountAvatar = 4;
  string Error = 5;
}

message Account {
  string Username = 1;
  uint32 RoleID = 2;
  string CreateMethod = 3;
  bool IsBanned = 4;
  bool IsRestricted = 5;
  bool IsSelfDeleted = 6;
}

message AccountInfo {
  string FirstName = 1;
  string LastName = 2;
  int64 DateOfBirth = 3;
  string Gender = 4;
  string MaterialStatus = 5;
  string PhoneNumber = 6;
  string Email = 7;
  string NameDisplayType = 8;
  string Bio = 9;
}

message PrivacyIndices {
  string DateOfBirth = 1;
  string Gender = 2;
  string MaterialStatus = 3;
  string Phone = 4;
  string Email = 5;
  string Bio = 6;
}

message Avatar {
  uint32 ID = 1;
  string AvatarURL = 2;
  bool IsInUse = 3;
  bool IsDeleted = 4;
}

message GetProfileInfoRequest {
  uint32 RequestAccountID = 1;
  uint32 TargetAccountID = 2;
  bool IsFriend = 3;
  bool IsBlocked = 4;
  bool IsFollow = 5;
  PrivacyIndices Privacy = 6;
}

message GetProfileInfoResponse {
  uint32 AccountID = 1;
  Account Account = 2;
  AccountInfo AccountInfo = 3;
  Avatar AccountAvatar = 4;
  PrivacyIndices Privacy = 5;
  bool IsFriend = 6;
  bool IsBlocked = 7;
  bool IsFollow = 8;
  int64 Timestamp = 9;
  string Error = 10;
}

message ChangeAccountDataRequest {
  uint64 AccountID = 1;
  string DataFieldName = 2;
  string Data = 3;
}

message ChangeAccountDataResponse {
  bool Success = 1;
}

message ChangeAvatarRequest {
  bytes Avatar = 1;
  uint64 AccountID = 2;
}

message ChangeAvatarResponse {
  bool Success = 1;
}

message LoginWithGoogleRequest {
  string Email = 1;
  string DisplayName = 2;
  string PhotoURL = 3;
  string AuthCode = 4;
}

message LoginWithGoogleResponse {
  bool Success = 1;
  uint64 AccountID = 2;
}

message VerifyUsernameAndEmailRequest {
  string Username = 1;
  string Email = 2;
}

message VerifyUsernameAndEmailResponse {
  bool Success = 1;
  int64 UserID = 2;
}

message ChangePasswordRequest {
  uint64 AccountID = 1;
  string NewPassword = 2;
}

message ChangePasswordResponse {
  bool Success = 1;
}

message CustomDeleteAccountRequest {
  uint32 AccountID = 1;
  string Method = 2;
}

message CustomDeleteAccountResponse {
  bool Success = 1;
}

message SearchAccountRequest {
  uint32 RequestAccountID = 1;
  repeated uint32 BlockList = 2;
  repeated uint32 BlockedList = 3;
  string QueryString = 4;
  uint32 Page = 5;
  uint32 PageSize = 6;
}

message SearchAccountResponse {
  repeated SingleDisplayInfo Account = 1;
  uint32 Page = 2;
  uint32 PageSize = 3;
}

message GetNewRegisterationDataRequest {
  uint32 RequestAccountID = 1;
  string PeriodLabel = 2;
  uint32 PeriodData = 3;
}

message GetNewRegisterationDataResponse {
  uint32 RequestAccountID = 1;
  string PeriodLabel = 2;
  uint64 TotalUsers = 3;
  repeated DataTerms Data = 4;
}

message DataTerms {
  string Label = 1;
  uint64 Count = 2;
}

message CountTypeUserRequest {
  uint32 RequestAccountID = 1;
}

message CountTypeUserResponse {
  uint32 RequestAccountID = 1;
  uint64 TotalUsers = 2;
  uint64 BannedUsers = 3;
  uint64 DeletedUsers = 4;
}

message GetAccountListRequest {
  uint32 RequestID = 1;
  uint32 Page = 2;
  uint32 PageSize = 3;
}

message AccountRawInfo {
  uint32 AccountID = 1;
  string Username = 2;
  bool IsBanned = 3;
  string Method = 4;
  bool IsSelfDeleted = 5;
}

message GetAccountListResponse {
  repeated AccountRawInfo Accounts = 1;
  uint32 Page = 2;
  uint32 PageSize = 3;
}

message SearchAccountListRequest {
  uint32 RequestID = 1;
  string QueryString = 2;
  uint32 Page = 3;
  uint32 PageSize = 4;
}

message SearchAccountListResponse {
  repeated AccountRawInfo Accounts = 1;
  uint32 Page = 2;
  uint32 PageSize = 3;
}

message ResolveBanRequest {
  uint32 AccountID = 1;
  string Action = 2;
}

message ResolveBanResponse {
  bool Success = 1;
}

message GetUsernameRequest {
  uint32 AccountID = 1;
}

message GetUsernameResponse {
  string Username = 1;
}