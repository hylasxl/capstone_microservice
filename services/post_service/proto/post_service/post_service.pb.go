// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: proto/post_service/post_service.proto

package post_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID              uint64   `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Content                string   `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	IsPublishedLater       bool     `protobuf:"varint,3,opt,name=IsPublishedLater,proto3" json:"IsPublishedLater,omitempty"`
	PublishedLateTimestamp int64    `protobuf:"varint,4,opt,name=PublishedLateTimestamp,proto3" json:"PublishedLateTimestamp,omitempty"`
	PrivacyStatus          string   `protobuf:"bytes,5,opt,name=PrivacyStatus,proto3" json:"PrivacyStatus,omitempty"`
	TagAccountIDs          []string `protobuf:"bytes,6,rep,name=TagAccountIDs,proto3" json:"TagAccountIDs,omitempty"`
}

func (x *CreatePostRequest) Reset() {
	*x = CreatePostRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRequest) ProtoMessage() {}

func (x *CreatePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRequest.ProtoReflect.Descriptor instead.
func (*CreatePostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePostRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *CreatePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreatePostRequest) GetIsPublishedLater() bool {
	if x != nil {
		return x.IsPublishedLater
	}
	return false
}

func (x *CreatePostRequest) GetPublishedLateTimestamp() int64 {
	if x != nil {
		return x.PublishedLateTimestamp
	}
	return 0
}

func (x *CreatePostRequest) GetPrivacyStatus() string {
	if x != nil {
		return x.PrivacyStatus
	}
	return ""
}

func (x *CreatePostRequest) GetTagAccountIDs() []string {
	if x != nil {
		return x.TagAccountIDs
	}
	return nil
}

type MultiMediaMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaType    string `protobuf:"bytes,1,opt,name=MediaType,proto3" json:"MediaType,omitempty"`
	UploadStatus string `protobuf:"bytes,2,opt,name=UploadStatus,proto3" json:"UploadStatus,omitempty"`
	Media        []byte `protobuf:"bytes,3,opt,name=Media,proto3" json:"Media,omitempty"`
	Content      string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *MultiMediaMessage) Reset() {
	*x = MultiMediaMessage{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiMediaMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiMediaMessage) ProtoMessage() {}

func (x *MultiMediaMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiMediaMessage.ProtoReflect.Descriptor instead.
func (*MultiMediaMessage) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{1}
}

func (x *MultiMediaMessage) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *MultiMediaMessage) GetUploadStatus() string {
	if x != nil {
		return x.UploadStatus
	}
	return ""
}

func (x *MultiMediaMessage) GetMedia() []byte {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *MultiMediaMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreatePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CreatePostResponse) Reset() {
	*x = CreatePostResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostResponse) ProtoMessage() {}

func (x *CreatePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostResponse.ProtoReflect.Descriptor instead.
func (*CreatePostResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePostResponse) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *CreatePostResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UploadImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Medias []*MultiMediaMessage `protobuf:"bytes,1,rep,name=Medias,proto3" json:"Medias,omitempty"`
	PostID uint64               `protobuf:"varint,2,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *UploadImageRequest) Reset() {
	*x = UploadImageRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageRequest) ProtoMessage() {}

func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.
func (*UploadImageRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{3}
}

func (x *UploadImageRequest) GetMedias() []*MultiMediaMessage {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *UploadImageRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

type UploadImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaURLs []string `protobuf:"bytes,1,rep,name=MediaURLs,proto3" json:"MediaURLs,omitempty"`
	Error     string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *UploadImageResponse) Reset() {
	*x = UploadImageResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageResponse) ProtoMessage() {}

func (x *UploadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageResponse.ProtoReflect.Descriptor instead.
func (*UploadImageResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{4}
}

func (x *UploadImageResponse) GetMediaURLs() []string {
	if x != nil {
		return x.MediaURLs
	}
	return nil
}

func (x *UploadImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SharePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID      uint64   `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Content        string   `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	IsShared       bool     `protobuf:"varint,3,opt,name=IsShared,proto3" json:"IsShared,omitempty"`
	OriginalPostID uint64   `protobuf:"varint,4,opt,name=OriginalPostID,proto3" json:"OriginalPostID,omitempty"`
	PrivacyStatus  string   `protobuf:"bytes,5,opt,name=PrivacyStatus,proto3" json:"PrivacyStatus,omitempty"`
	TagAccountIDs  []string `protobuf:"bytes,6,rep,name=TagAccountIDs,proto3" json:"TagAccountIDs,omitempty"`
}

func (x *SharePostRequest) Reset() {
	*x = SharePostRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharePostRequest) ProtoMessage() {}

func (x *SharePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharePostRequest.ProtoReflect.Descriptor instead.
func (*SharePostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{5}
}

func (x *SharePostRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *SharePostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SharePostRequest) GetIsShared() bool {
	if x != nil {
		return x.IsShared
	}
	return false
}

func (x *SharePostRequest) GetOriginalPostID() uint64 {
	if x != nil {
		return x.OriginalPostID
	}
	return 0
}

func (x *SharePostRequest) GetPrivacyStatus() string {
	if x != nil {
		return x.PrivacyStatus
	}
	return ""
}

func (x *SharePostRequest) GetTagAccountIDs() []string {
	if x != nil {
		return x.TagAccountIDs
	}
	return nil
}

type SharePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *SharePostResponse) Reset() {
	*x = SharePostResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharePostResponse) ProtoMessage() {}

func (x *SharePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharePostResponse.ProtoReflect.Descriptor instead.
func (*SharePostResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{6}
}

func (x *SharePostResponse) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *SharePostResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CommentPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint64 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	PostID    uint64 `protobuf:"varint,2,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *CommentPostRequest) Reset() {
	*x = CommentPostRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentPostRequest) ProtoMessage() {}

func (x *CommentPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentPostRequest.ProtoReflect.Descriptor instead.
func (*CommentPostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{7}
}

func (x *CommentPostRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *CommentPostRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *CommentPostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CommentPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	CommentID int64  `protobuf:"varint,2,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
}

func (x *CommentPostResponse) Reset() {
	*x = CommentPostResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentPostResponse) ProtoMessage() {}

func (x *CommentPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentPostResponse.ProtoReflect.Descriptor instead.
func (*CommentPostResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{8}
}

func (x *CommentPostResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CommentPostResponse) GetCommentID() int64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

type GetSinglePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *GetSinglePostRequest) Reset() {
	*x = GetSinglePostRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSinglePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSinglePostRequest) ProtoMessage() {}

func (x *GetSinglePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSinglePostRequest.ProtoReflect.Descriptor instead.
func (*GetSinglePostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetSinglePostRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

type GetSinglePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID              uint64          `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Content             string          `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	PrivacyStatus       string          `protobuf:"bytes,3,opt,name=PrivacyStatus,proto3" json:"PrivacyStatus,omitempty"`
	Medias              []*MediaDisplay `protobuf:"bytes,4,rep,name=Medias,proto3" json:"Medias,omitempty"`
	TotalCommentNumber  uint64          `protobuf:"varint,5,opt,name=TotalCommentNumber,proto3" json:"TotalCommentNumber,omitempty"`
	TotalReactionNumber uint64          `protobuf:"varint,6,opt,name=TotalReactionNumber,proto3" json:"TotalReactionNumber,omitempty"`
	TotalShareNumber    uint64          `protobuf:"varint,7,opt,name=TotalShareNumber,proto3" json:"TotalShareNumber,omitempty"`
	Error               string          `protobuf:"bytes,8,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetSinglePostResponse) Reset() {
	*x = GetSinglePostResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSinglePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSinglePostResponse) ProtoMessage() {}

func (x *GetSinglePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSinglePostResponse.ProtoReflect.Descriptor instead.
func (*GetSinglePostResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetSinglePostResponse) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *GetSinglePostResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetSinglePostResponse) GetPrivacyStatus() string {
	if x != nil {
		return x.PrivacyStatus
	}
	return ""
}

func (x *GetSinglePostResponse) GetMedias() []*MediaDisplay {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *GetSinglePostResponse) GetTotalCommentNumber() uint64 {
	if x != nil {
		return x.TotalCommentNumber
	}
	return 0
}

func (x *GetSinglePostResponse) GetTotalReactionNumber() uint64 {
	if x != nil {
		return x.TotalReactionNumber
	}
	return 0
}

func (x *GetSinglePostResponse) GetTotalShareNumber() uint64 {
	if x != nil {
		return x.TotalShareNumber
	}
	return 0
}

func (x *GetSinglePostResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type EditPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID        uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Content       string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	PrivacyStatus string `protobuf:"bytes,3,opt,name=PrivacyStatus,proto3" json:"PrivacyStatus,omitempty"`
}

func (x *EditPostRequest) Reset() {
	*x = EditPostRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPostRequest) ProtoMessage() {}

func (x *EditPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPostRequest.ProtoReflect.Descriptor instead.
func (*EditPostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{11}
}

func (x *EditPostRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *EditPostRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EditPostRequest) GetPrivacyStatus() string {
	if x != nil {
		return x.PrivacyStatus
	}
	return ""
}

type EditPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *EditPostResponse) Reset() {
	*x = EditPostResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditPostResponse) ProtoMessage() {}

func (x *EditPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditPostResponse.ProtoReflect.Descriptor instead.
func (*EditPostResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{12}
}

func (x *EditPostResponse) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *EditPostResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeletePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *DeletePostRequest) Reset() {
	*x = DeletePostRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostRequest) ProtoMessage() {}

func (x *DeletePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostRequest.ProtoReflect.Descriptor instead.
func (*DeletePostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{13}
}

func (x *DeletePostRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

type DeletePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *DeletePostResponse) Reset() {
	*x = DeletePostResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostResponse) ProtoMessage() {}

func (x *DeletePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostResponse.ProtoReflect.Descriptor instead.
func (*DeletePostResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{14}
}

func (x *DeletePostResponse) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *DeletePostResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReplyCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalCommentID uint64 `protobuf:"varint,1,opt,name=OriginalCommentID,proto3" json:"OriginalCommentID,omitempty"`
	PostID            uint64 `protobuf:"varint,2,opt,name=PostID,proto3" json:"PostID,omitempty"`
	ReplyContent      string `protobuf:"bytes,3,opt,name=ReplyContent,proto3" json:"ReplyContent,omitempty"`
	AccountID         uint32 `protobuf:"varint,4,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *ReplyCommentRequest) Reset() {
	*x = ReplyCommentRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentRequest) ProtoMessage() {}

func (x *ReplyCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentRequest.ProtoReflect.Descriptor instead.
func (*ReplyCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{15}
}

func (x *ReplyCommentRequest) GetOriginalCommentID() uint64 {
	if x != nil {
		return x.OriginalCommentID
	}
	return 0
}

func (x *ReplyCommentRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *ReplyCommentRequest) GetReplyContent() string {
	if x != nil {
		return x.ReplyContent
	}
	return ""
}

func (x *ReplyCommentRequest) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type ReplyCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyCommentID uint64 `protobuf:"varint,1,opt,name=ReplyCommentID,proto3" json:"ReplyCommentID,omitempty"`
	Error          string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ReplyCommentResponse) Reset() {
	*x = ReplyCommentResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentResponse) ProtoMessage() {}

func (x *ReplyCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentResponse.ProtoReflect.Descriptor instead.
func (*ReplyCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{16}
}

func (x *ReplyCommentResponse) GetReplyCommentID() uint64 {
	if x != nil {
		return x.ReplyCommentID
	}
	return 0
}

func (x *ReplyCommentResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type EditCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID uint64 `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *EditCommentRequest) Reset() {
	*x = EditCommentRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCommentRequest) ProtoMessage() {}

func (x *EditCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCommentRequest.ProtoReflect.Descriptor instead.
func (*EditCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{17}
}

func (x *EditCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *EditCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type EditCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID uint64 `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *EditCommentResponse) Reset() {
	*x = EditCommentResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCommentResponse) ProtoMessage() {}

func (x *EditCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCommentResponse.ProtoReflect.Descriptor instead.
func (*EditCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{18}
}

func (x *EditCommentResponse) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *EditCommentResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID uint64 `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteCommentResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeletePostImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID  uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	MediaID uint64 `protobuf:"varint,2,opt,name=MediaID,proto3" json:"MediaID,omitempty"`
}

func (x *DeletePostImageRequest) Reset() {
	*x = DeletePostImageRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostImageRequest) ProtoMessage() {}

func (x *DeletePostImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostImageRequest.ProtoReflect.Descriptor instead.
func (*DeletePostImageRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{21}
}

func (x *DeletePostImageRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *DeletePostImageRequest) GetMediaID() uint64 {
	if x != nil {
		return x.MediaID
	}
	return 0
}

type DeletePostImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *DeletePostImageResponse) Reset() {
	*x = DeletePostImageResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePostImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostImageResponse) ProtoMessage() {}

func (x *DeletePostImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostImageResponse.ProtoReflect.Descriptor instead.
func (*DeletePostImageResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{22}
}

func (x *DeletePostImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReactPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID    uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	ReactType string `protobuf:"bytes,3,opt,name=ReactType,proto3" json:"ReactType,omitempty"`
}

func (x *ReactPostRequest) Reset() {
	*x = ReactPostRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactPostRequest) ProtoMessage() {}

func (x *ReactPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactPostRequest.ProtoReflect.Descriptor instead.
func (*ReactPostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{23}
}

func (x *ReactPostRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *ReactPostRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ReactPostRequest) GetReactType() string {
	if x != nil {
		return x.ReactType
	}
	return ""
}

type ReactPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ReactPostResponse) Reset() {
	*x = ReactPostResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactPostResponse) ProtoMessage() {}

func (x *ReactPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactPostResponse.ProtoReflect.Descriptor instead.
func (*ReactPostResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{24}
}

func (x *ReactPostResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RemoveReactPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID    uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *RemoveReactPostRequest) Reset() {
	*x = RemoveReactPostRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveReactPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReactPostRequest) ProtoMessage() {}

func (x *RemoveReactPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReactPostRequest.ProtoReflect.Descriptor instead.
func (*RemoveReactPostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveReactPostRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *RemoveReactPostRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type RemoveReactPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *RemoveReactPostResponse) Reset() {
	*x = RemoveReactPostResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveReactPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReactPostResponse) ProtoMessage() {}

func (x *RemoveReactPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReactPostResponse.ProtoReflect.Descriptor instead.
func (*RemoveReactPostResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{26}
}

func (x *RemoveReactPostResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReactImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint64 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	MediaID   uint64 `protobuf:"varint,2,opt,name=MediaID,proto3" json:"MediaID,omitempty"`
	ReactType string `protobuf:"bytes,3,opt,name=ReactType,proto3" json:"ReactType,omitempty"`
}

func (x *ReactImageRequest) Reset() {
	*x = ReactImageRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactImageRequest) ProtoMessage() {}

func (x *ReactImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactImageRequest.ProtoReflect.Descriptor instead.
func (*ReactImageRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{27}
}

func (x *ReactImageRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ReactImageRequest) GetMediaID() uint64 {
	if x != nil {
		return x.MediaID
	}
	return 0
}

func (x *ReactImageRequest) GetReactType() string {
	if x != nil {
		return x.ReactType
	}
	return ""
}

type ReactImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ReactImageResponse) Reset() {
	*x = ReactImageResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactImageResponse) ProtoMessage() {}

func (x *ReactImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactImageResponse.ProtoReflect.Descriptor instead.
func (*ReactImageResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{28}
}

func (x *ReactImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RemoveReactImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaID   uint64 `protobuf:"varint,1,opt,name=MediaID,proto3" json:"MediaID,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *RemoveReactImageRequest) Reset() {
	*x = RemoveReactImageRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveReactImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReactImageRequest) ProtoMessage() {}

func (x *RemoveReactImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReactImageRequest.ProtoReflect.Descriptor instead.
func (*RemoveReactImageRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{29}
}

func (x *RemoveReactImageRequest) GetMediaID() uint64 {
	if x != nil {
		return x.MediaID
	}
	return 0
}

func (x *RemoveReactImageRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type RemoveReactImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *RemoveReactImageResponse) Reset() {
	*x = RemoveReactImageResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveReactImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReactImageResponse) ProtoMessage() {}

func (x *RemoveReactImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReactImageResponse.ProtoReflect.Descriptor instead.
func (*RemoveReactImageResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{30}
}

func (x *RemoveReactImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CommentImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaID   uint64 `protobuf:"varint,1,opt,name=MediaID,proto3" json:"MediaID,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *CommentImageRequest) Reset() {
	*x = CommentImageRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentImageRequest) ProtoMessage() {}

func (x *CommentImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentImageRequest.ProtoReflect.Descriptor instead.
func (*CommentImageRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{31}
}

func (x *CommentImageRequest) GetMediaID() uint64 {
	if x != nil {
		return x.MediaID
	}
	return 0
}

func (x *CommentImageRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *CommentImageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CommentImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID uint64 `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CommentImageResponse) Reset() {
	*x = CommentImageResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentImageResponse) ProtoMessage() {}

func (x *CommentImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentImageResponse.ProtoReflect.Descriptor instead.
func (*CommentImageResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{32}
}

func (x *CommentImageResponse) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *CommentImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReplyCommentImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaID           uint64 `protobuf:"varint,1,opt,name=MediaID,proto3" json:"MediaID,omitempty"`
	AccountID         uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Content           string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	CommentLevel      int64  `protobuf:"varint,4,opt,name=CommentLevel,proto3" json:"CommentLevel,omitempty"`
	OriginalCommentID uint64 `protobuf:"varint,5,opt,name=OriginalCommentID,proto3" json:"OriginalCommentID,omitempty"`
}

func (x *ReplyCommentImageRequest) Reset() {
	*x = ReplyCommentImageRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentImageRequest) ProtoMessage() {}

func (x *ReplyCommentImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentImageRequest.ProtoReflect.Descriptor instead.
func (*ReplyCommentImageRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{33}
}

func (x *ReplyCommentImageRequest) GetMediaID() uint64 {
	if x != nil {
		return x.MediaID
	}
	return 0
}

func (x *ReplyCommentImageRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ReplyCommentImageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyCommentImageRequest) GetCommentLevel() int64 {
	if x != nil {
		return x.CommentLevel
	}
	return 0
}

func (x *ReplyCommentImageRequest) GetOriginalCommentID() uint64 {
	if x != nil {
		return x.OriginalCommentID
	}
	return 0
}

type ReplyCommentImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ReplyCommentImageResponse) Reset() {
	*x = ReplyCommentImageResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyCommentImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyCommentImageResponse) ProtoMessage() {}

func (x *ReplyCommentImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyCommentImageResponse.ProtoReflect.Descriptor instead.
func (*ReplyCommentImageResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{34}
}

func (x *ReplyCommentImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type EditCommentImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID uint64 `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *EditCommentImageRequest) Reset() {
	*x = EditCommentImageRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditCommentImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCommentImageRequest) ProtoMessage() {}

func (x *EditCommentImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCommentImageRequest.ProtoReflect.Descriptor instead.
func (*EditCommentImageRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{35}
}

func (x *EditCommentImageRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *EditCommentImageRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *EditCommentImageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type EditCommentImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *EditCommentImageResponse) Reset() {
	*x = EditCommentImageResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditCommentImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCommentImageResponse) ProtoMessage() {}

func (x *EditCommentImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCommentImageResponse.ProtoReflect.Descriptor instead.
func (*EditCommentImageResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{36}
}

func (x *EditCommentImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteCommentImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID uint64 `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	MediaID   uint64 `protobuf:"varint,3,opt,name=MediaID,proto3" json:"MediaID,omitempty"`
}

func (x *DeleteCommentImageRequest) Reset() {
	*x = DeleteCommentImageRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentImageRequest) ProtoMessage() {}

func (x *DeleteCommentImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentImageRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteCommentImageRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *DeleteCommentImageRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *DeleteCommentImageRequest) GetMediaID() uint64 {
	if x != nil {
		return x.MediaID
	}
	return 0
}

type DeleteCommentImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *DeleteCommentImageResponse) Reset() {
	*x = DeleteCommentImageResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentImageResponse) ProtoMessage() {}

func (x *DeleteCommentImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentImageResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentImageResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteCommentImageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CountPostCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *CountPostCommentRequest) Reset() {
	*x = CountPostCommentRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountPostCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPostCommentRequest) ProtoMessage() {}

func (x *CountPostCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPostCommentRequest.ProtoReflect.Descriptor instead.
func (*CountPostCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{39}
}

func (x *CountPostCommentRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

type CountPostCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentQuantity int64  `protobuf:"varint,1,opt,name=CommentQuantity,proto3" json:"CommentQuantity,omitempty"`
	Error           string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CountPostCommentResponse) Reset() {
	*x = CountPostCommentResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountPostCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPostCommentResponse) ProtoMessage() {}

func (x *CountPostCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPostCommentResponse.ProtoReflect.Descriptor instead.
func (*CountPostCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{40}
}

func (x *CountPostCommentResponse) GetCommentQuantity() int64 {
	if x != nil {
		return x.CommentQuantity
	}
	return 0
}

func (x *CountPostCommentResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CountPostReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *CountPostReactionRequest) Reset() {
	*x = CountPostReactionRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountPostReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPostReactionRequest) ProtoMessage() {}

func (x *CountPostReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPostReactionRequest.ProtoReflect.Descriptor instead.
func (*CountPostReactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{41}
}

func (x *CountPostReactionRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

type CountPostReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReactionQuantity int64  `protobuf:"varint,1,opt,name=ReactionQuantity,proto3" json:"ReactionQuantity,omitempty"`
	Error            string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CountPostReactionResponse) Reset() {
	*x = CountPostReactionResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountPostReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPostReactionResponse) ProtoMessage() {}

func (x *CountPostReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPostReactionResponse.ProtoReflect.Descriptor instead.
func (*CountPostReactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{42}
}

func (x *CountPostReactionResponse) GetReactionQuantity() int64 {
	if x != nil {
		return x.ReactionQuantity
	}
	return 0
}

func (x *CountPostReactionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CountPostShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *CountPostShareRequest) Reset() {
	*x = CountPostShareRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountPostShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPostShareRequest) ProtoMessage() {}

func (x *CountPostShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPostShareRequest.ProtoReflect.Descriptor instead.
func (*CountPostShareRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{43}
}

func (x *CountPostShareRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

type CountPostShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareQuantity int64  `protobuf:"varint,1,opt,name=ShareQuantity,proto3" json:"ShareQuantity,omitempty"`
	Error         string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CountPostShareResponse) Reset() {
	*x = CountPostShareResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountPostShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPostShareResponse) ProtoMessage() {}

func (x *CountPostShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPostShareResponse.ProtoReflect.Descriptor instead.
func (*CountPostShareResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{44}
}

func (x *CountPostShareResponse) GetShareQuantity() int64 {
	if x != nil {
		return x.ShareQuantity
	}
	return 0
}

func (x *CountPostShareResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetPostCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID   uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Page     uint32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize uint32 `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *GetPostCommentRequest) Reset() {
	*x = GetPostCommentRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostCommentRequest) ProtoMessage() {}

func (x *GetPostCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostCommentRequest.ProtoReflect.Descriptor instead.
func (*GetPostCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{45}
}

func (x *GetPostCommentRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *GetPostCommentRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPostCommentRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID   uint64     `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	AccountID   uint64     `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Content     string     `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	IsEdited    bool       `protobuf:"varint,6,opt,name=IsEdited,proto3" json:"IsEdited,omitempty"`
	ReplyFromID uint64     `protobuf:"varint,7,opt,name=ReplyFromID,proto3" json:"ReplyFromID,omitempty"`
	Level       uint32     `protobuf:"varint,8,opt,name=Level,proto3" json:"Level,omitempty"`
	Replies     []*Comment `protobuf:"bytes,9,rep,name=Replies,proto3" json:"Replies,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{46}
}

func (x *Comment) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *Comment) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *Comment) GetReplyFromID() uint64 {
	if x != nil {
		return x.ReplyFromID
	}
	return 0
}

func (x *Comment) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Comment) GetReplies() []*Comment {
	if x != nil {
		return x.Replies
	}
	return nil
}

type GetPostCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID        uint64     `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Comments      []*Comment `protobuf:"bytes,2,rep,name=Comments,proto3" json:"Comments,omitempty"`
	TotalComments uint32     `protobuf:"varint,3,opt,name=TotalComments,proto3" json:"TotalComments,omitempty"`
	Error         string     `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetPostCommentResponse) Reset() {
	*x = GetPostCommentResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostCommentResponse) ProtoMessage() {}

func (x *GetPostCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostCommentResponse.ProtoReflect.Descriptor instead.
func (*GetPostCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{47}
}

func (x *GetPostCommentResponse) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *GetPostCommentResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetPostCommentResponse) GetTotalComments() uint32 {
	if x != nil {
		return x.TotalComments
	}
	return 0
}

func (x *GetPostCommentResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetPostReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID uint64 `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
}

func (x *GetPostReactionRequest) Reset() {
	*x = GetPostReactionRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostReactionRequest) ProtoMessage() {}

func (x *GetPostReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostReactionRequest.ProtoReflect.Descriptor instead.
func (*GetPostReactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{48}
}

func (x *GetPostReactionRequest) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

type GetPostReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reactions []*ReactionDisplay `protobuf:"bytes,1,rep,name=Reactions,proto3" json:"Reactions,omitempty"`
	Error     string             `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetPostReactionResponse) Reset() {
	*x = GetPostReactionResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostReactionResponse) ProtoMessage() {}

func (x *GetPostReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostReactionResponse.ProtoReflect.Descriptor instead.
func (*GetPostReactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetPostReactionResponse) GetReactions() []*ReactionDisplay {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *GetPostReactionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CommentDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	AccountID uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	CreatedAt int64  `protobuf:"varint,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *CommentDisplay) Reset() {
	*x = CommentDisplay{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentDisplay) ProtoMessage() {}

func (x *CommentDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentDisplay.ProtoReflect.Descriptor instead.
func (*CommentDisplay) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{50}
}

func (x *CommentDisplay) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentDisplay) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *CommentDisplay) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ShareDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint64 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	CreatedAt int64  `protobuf:"varint,2,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *ShareDisplay) Reset() {
	*x = ShareDisplay{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareDisplay) ProtoMessage() {}

func (x *ShareDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareDisplay.ProtoReflect.Descriptor instead.
func (*ShareDisplay) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{51}
}

func (x *ShareDisplay) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ShareDisplay) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type MediaDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL                 string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Content             string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	TotalCommentNumber  uint64 `protobuf:"varint,3,opt,name=TotalCommentNumber,proto3" json:"TotalCommentNumber,omitempty"`
	TotalReactionNumber uint64 `protobuf:"varint,4,opt,name=TotalReactionNumber,proto3" json:"TotalReactionNumber,omitempty"`
	MediaID             uint64 `protobuf:"varint,5,opt,name=MediaID,proto3" json:"MediaID,omitempty"`
}

func (x *MediaDisplay) Reset() {
	*x = MediaDisplay{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaDisplay) ProtoMessage() {}

func (x *MediaDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaDisplay.ProtoReflect.Descriptor instead.
func (*MediaDisplay) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{52}
}

func (x *MediaDisplay) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *MediaDisplay) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MediaDisplay) GetTotalCommentNumber() uint64 {
	if x != nil {
		return x.TotalCommentNumber
	}
	return 0
}

func (x *MediaDisplay) GetTotalReactionNumber() uint64 {
	if x != nil {
		return x.TotalReactionNumber
	}
	return 0
}

func (x *MediaDisplay) GetMediaID() uint64 {
	if x != nil {
		return x.MediaID
	}
	return 0
}

type ReactionDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReactionType string `protobuf:"bytes,1,opt,name=ReactionType,proto3" json:"ReactionType,omitempty"`
	AccountID    uint64 `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *ReactionDisplay) Reset() {
	*x = ReactionDisplay{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactionDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionDisplay) ProtoMessage() {}

func (x *ReactionDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionDisplay.ProtoReflect.Descriptor instead.
func (*ReactionDisplay) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{53}
}

func (x *ReactionDisplay) GetReactionType() string {
	if x != nil {
		return x.ReactionType
	}
	return ""
}

func (x *ReactionDisplay) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type GetPostMediaCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostMediaID uint64 `protobuf:"varint,1,opt,name=PostMediaID,proto3" json:"PostMediaID,omitempty"`
	Page        uint32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize    uint32 `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *GetPostMediaCommentRequest) Reset() {
	*x = GetPostMediaCommentRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostMediaCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostMediaCommentRequest) ProtoMessage() {}

func (x *GetPostMediaCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostMediaCommentRequest.ProtoReflect.Descriptor instead.
func (*GetPostMediaCommentRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{54}
}

func (x *GetPostMediaCommentRequest) GetPostMediaID() uint64 {
	if x != nil {
		return x.PostMediaID
	}
	return 0
}

func (x *GetPostMediaCommentRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPostMediaCommentRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MediaComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID   uint64          `protobuf:"varint,1,opt,name=CommentID,proto3" json:"CommentID,omitempty"`
	AccountID   uint64          `protobuf:"varint,2,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Content     string          `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	IsEdited    bool            `protobuf:"varint,4,opt,name=IsEdited,proto3" json:"IsEdited,omitempty"`
	ReplyFromID uint64          `protobuf:"varint,5,opt,name=ReplyFromID,proto3" json:"ReplyFromID,omitempty"`
	Level       uint32          `protobuf:"varint,6,opt,name=Level,proto3" json:"Level,omitempty"`
	Replies     []*MediaComment `protobuf:"bytes,7,rep,name=Replies,proto3" json:"Replies,omitempty"`
}

func (x *MediaComment) Reset() {
	*x = MediaComment{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaComment) ProtoMessage() {}

func (x *MediaComment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaComment.ProtoReflect.Descriptor instead.
func (*MediaComment) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{55}
}

func (x *MediaComment) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *MediaComment) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *MediaComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MediaComment) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *MediaComment) GetReplyFromID() uint64 {
	if x != nil {
		return x.ReplyFromID
	}
	return 0
}

func (x *MediaComment) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *MediaComment) GetReplies() []*MediaComment {
	if x != nil {
		return x.Replies
	}
	return nil
}

type GetPostMediaCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostMediaID   uint64          `protobuf:"varint,1,opt,name=PostMediaID,proto3" json:"PostMediaID,omitempty"`
	Comments      []*MediaComment `protobuf:"bytes,2,rep,name=Comments,proto3" json:"Comments,omitempty"`
	TotalComments uint32          `protobuf:"varint,3,opt,name=TotalComments,proto3" json:"TotalComments,omitempty"`
	Error         string          `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetPostMediaCommentResponse) Reset() {
	*x = GetPostMediaCommentResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostMediaCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostMediaCommentResponse) ProtoMessage() {}

func (x *GetPostMediaCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostMediaCommentResponse.ProtoReflect.Descriptor instead.
func (*GetPostMediaCommentResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{56}
}

func (x *GetPostMediaCommentResponse) GetPostMediaID() uint64 {
	if x != nil {
		return x.PostMediaID
	}
	return 0
}

func (x *GetPostMediaCommentResponse) GetComments() []*MediaComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetPostMediaCommentResponse) GetTotalComments() uint32 {
	if x != nil {
		return x.TotalComments
	}
	return 0
}

func (x *GetPostMediaCommentResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetWallPostListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAccountID           uint64 `protobuf:"varint,1,opt,name=TargetAccountID,proto3" json:"TargetAccountID,omitempty"`
	RequestAccountID          uint64 `protobuf:"varint,2,opt,name=RequestAccountID,proto3" json:"RequestAccountID,omitempty"`
	Page                      uint32 `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize                  uint32 `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	IsAccountBlockedEachOther bool   `protobuf:"varint,5,opt,name=IsAccountBlockedEachOther,proto3" json:"IsAccountBlockedEachOther,omitempty"`
	IsFriend                  bool   `protobuf:"varint,6,opt,name=IsFriend,proto3" json:"IsFriend,omitempty"`
}

func (x *GetWallPostListRequest) Reset() {
	*x = GetWallPostListRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWallPostListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWallPostListRequest) ProtoMessage() {}

func (x *GetWallPostListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWallPostListRequest.ProtoReflect.Descriptor instead.
func (*GetWallPostListRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{57}
}

func (x *GetWallPostListRequest) GetTargetAccountID() uint64 {
	if x != nil {
		return x.TargetAccountID
	}
	return 0
}

func (x *GetWallPostListRequest) GetRequestAccountID() uint64 {
	if x != nil {
		return x.RequestAccountID
	}
	return 0
}

func (x *GetWallPostListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetWallPostListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetWallPostListRequest) GetIsAccountBlockedEachOther() bool {
	if x != nil {
		return x.IsAccountBlockedEachOther
	}
	return false
}

func (x *GetWallPostListRequest) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

type GetWallPostListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAccountID uint64         `protobuf:"varint,1,opt,name=TargetAccountID,proto3" json:"TargetAccountID,omitempty"`
	Page            uint32         `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	Posts           []*DisplayPost `protobuf:"bytes,3,rep,name=Posts,proto3" json:"Posts,omitempty"`
	Error           string         `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetWallPostListResponse) Reset() {
	*x = GetWallPostListResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWallPostListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWallPostListResponse) ProtoMessage() {}

func (x *GetWallPostListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWallPostListResponse.ProtoReflect.Descriptor instead.
func (*GetWallPostListResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{58}
}

func (x *GetWallPostListResponse) GetTargetAccountID() uint64 {
	if x != nil {
		return x.TargetAccountID
	}
	return 0
}

func (x *GetWallPostListResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetWallPostListResponse) GetPosts() []*DisplayPost {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *GetWallPostListResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DisplayPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostID                  uint64          `protobuf:"varint,1,opt,name=PostID,proto3" json:"PostID,omitempty"`
	Content                 string          `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	IsShared                bool            `protobuf:"varint,3,opt,name=IsShared,proto3" json:"IsShared,omitempty"`
	SharePostID             uint64          `protobuf:"varint,4,opt,name=SharePostID,proto3" json:"SharePostID,omitempty"`
	SharePostData           *DisplayPost    `protobuf:"bytes,5,opt,name=SharePostData,proto3" json:"SharePostData,omitempty"`
	IsSelfDeleted           bool            `protobuf:"varint,6,opt,name=IsSelfDeleted,proto3" json:"IsSelfDeleted,omitempty"`
	IsDeletedByAdmin        bool            `protobuf:"varint,7,opt,name=IsDeletedByAdmin,proto3" json:"IsDeletedByAdmin,omitempty"`
	IsHidden                bool            `protobuf:"varint,8,opt,name=IsHidden,proto3" json:"IsHidden,omitempty"`
	IsContentEdited         bool            `protobuf:"varint,9,opt,name=IsContentEdited,proto3" json:"IsContentEdited,omitempty"`
	PrivacyStatus           string          `protobuf:"bytes,10,opt,name=PrivacyStatus,proto3" json:"PrivacyStatus,omitempty"`
	Reactions               *PostReactions  `protobuf:"bytes,11,opt,name=Reactions,proto3" json:"Reactions,omitempty"`
	Comments                *PostComments   `protobuf:"bytes,12,opt,name=Comments,proto3" json:"Comments,omitempty"`
	Shares                  *PostShares     `protobuf:"bytes,13,opt,name=Shares,proto3" json:"Shares,omitempty"`
	InteractionType         string          `protobuf:"bytes,14,opt,name=InteractionType,proto3" json:"InteractionType,omitempty"`
	Medias                  []*MediaDisplay `protobuf:"bytes,15,rep,name=Medias,proto3" json:"Medias,omitempty"`
	CreatedAt               int64           `protobuf:"varint,16,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	IsPublishedLater        bool            `protobuf:"varint,17,opt,name=IsPublishedLater,proto3" json:"IsPublishedLater,omitempty"`
	PublishedLaterTimestamp int64           `protobuf:"varint,18,opt,name=PublishedLaterTimestamp,proto3" json:"PublishedLaterTimestamp,omitempty"`
	IsPublished             bool            `protobuf:"varint,19,opt,name=IsPublished,proto3" json:"IsPublished,omitempty"`
	Error                   string          `protobuf:"bytes,20,opt,name=Error,proto3" json:"Error,omitempty"`
	AccountID               uint64          `protobuf:"varint,21,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
}

func (x *DisplayPost) Reset() {
	*x = DisplayPost{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayPost) ProtoMessage() {}

func (x *DisplayPost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayPost.ProtoReflect.Descriptor instead.
func (*DisplayPost) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{59}
}

func (x *DisplayPost) GetPostID() uint64 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *DisplayPost) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DisplayPost) GetIsShared() bool {
	if x != nil {
		return x.IsShared
	}
	return false
}

func (x *DisplayPost) GetSharePostID() uint64 {
	if x != nil {
		return x.SharePostID
	}
	return 0
}

func (x *DisplayPost) GetSharePostData() *DisplayPost {
	if x != nil {
		return x.SharePostData
	}
	return nil
}

func (x *DisplayPost) GetIsSelfDeleted() bool {
	if x != nil {
		return x.IsSelfDeleted
	}
	return false
}

func (x *DisplayPost) GetIsDeletedByAdmin() bool {
	if x != nil {
		return x.IsDeletedByAdmin
	}
	return false
}

func (x *DisplayPost) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *DisplayPost) GetIsContentEdited() bool {
	if x != nil {
		return x.IsContentEdited
	}
	return false
}

func (x *DisplayPost) GetPrivacyStatus() string {
	if x != nil {
		return x.PrivacyStatus
	}
	return ""
}

func (x *DisplayPost) GetReactions() *PostReactions {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *DisplayPost) GetComments() *PostComments {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *DisplayPost) GetShares() *PostShares {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *DisplayPost) GetInteractionType() string {
	if x != nil {
		return x.InteractionType
	}
	return ""
}

func (x *DisplayPost) GetMedias() []*MediaDisplay {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *DisplayPost) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DisplayPost) GetIsPublishedLater() bool {
	if x != nil {
		return x.IsPublishedLater
	}
	return false
}

func (x *DisplayPost) GetPublishedLaterTimestamp() int64 {
	if x != nil {
		return x.PublishedLaterTimestamp
	}
	return 0
}

func (x *DisplayPost) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *DisplayPost) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DisplayPost) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

type PostReactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count       uint32             `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	DisplayData []*ReactionDisplay `protobuf:"bytes,2,rep,name=DisplayData,proto3" json:"DisplayData,omitempty"`
}

func (x *PostReactions) Reset() {
	*x = PostReactions{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostReactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostReactions) ProtoMessage() {}

func (x *PostReactions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostReactions.ProtoReflect.Descriptor instead.
func (*PostReactions) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{60}
}

func (x *PostReactions) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PostReactions) GetDisplayData() []*ReactionDisplay {
	if x != nil {
		return x.DisplayData
	}
	return nil
}

type PostComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count       uint32            `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	DisplayData []*CommentDisplay `protobuf:"bytes,2,rep,name=DisplayData,proto3" json:"DisplayData,omitempty"`
}

func (x *PostComments) Reset() {
	*x = PostComments{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostComments) ProtoMessage() {}

func (x *PostComments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostComments.ProtoReflect.Descriptor instead.
func (*PostComments) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{61}
}

func (x *PostComments) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PostComments) GetDisplayData() []*CommentDisplay {
	if x != nil {
		return x.DisplayData
	}
	return nil
}

type PostShares struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count       uint32          `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	DisplayData []*ShareDisplay `protobuf:"bytes,2,rep,name=DisplayData,proto3" json:"DisplayData,omitempty"`
}

func (x *PostShares) Reset() {
	*x = PostShares{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostShares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostShares) ProtoMessage() {}

func (x *PostShares) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostShares.ProtoReflect.Descriptor instead.
func (*PostShares) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{62}
}

func (x *PostShares) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PostShares) GetDisplayData() []*ShareDisplay {
	if x != nil {
		return x.DisplayData
	}
	return nil
}

type GetNewFeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     uint64              `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Page          uint32              `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize      uint32              `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	SeenPostIDs   []uint64            `protobuf:"varint,4,rep,packed,name=SeenPostIDs,proto3" json:"SeenPostIDs,omitempty"`
	Interactions  []*InteractionScore `protobuf:"bytes,5,rep,name=Interactions,proto3" json:"Interactions,omitempty"`
	ListFriendIDs []uint64            `protobuf:"varint,6,rep,packed,name=ListFriendIDs,proto3" json:"ListFriendIDs,omitempty"`
}

func (x *GetNewFeedsRequest) Reset() {
	*x = GetNewFeedsRequest{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewFeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewFeedsRequest) ProtoMessage() {}

func (x *GetNewFeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewFeedsRequest.ProtoReflect.Descriptor instead.
func (*GetNewFeedsRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{63}
}

func (x *GetNewFeedsRequest) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *GetNewFeedsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNewFeedsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNewFeedsRequest) GetSeenPostIDs() []uint64 {
	if x != nil {
		return x.SeenPostIDs
	}
	return nil
}

func (x *GetNewFeedsRequest) GetInteractions() []*InteractionScore {
	if x != nil {
		return x.Interactions
	}
	return nil
}

func (x *GetNewFeedsRequest) GetListFriendIDs() []uint64 {
	if x != nil {
		return x.ListFriendIDs
	}
	return nil
}

type GetNewFeedsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint64         `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Page      uint32         `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize  uint32         `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	Posts     []*DisplayPost `protobuf:"bytes,4,rep,name=Posts,proto3" json:"Posts,omitempty"`
}

func (x *GetNewFeedsResponse) Reset() {
	*x = GetNewFeedsResponse{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewFeedsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewFeedsResponse) ProtoMessage() {}

func (x *GetNewFeedsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewFeedsResponse.ProtoReflect.Descriptor instead.
func (*GetNewFeedsResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{64}
}

func (x *GetNewFeedsResponse) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *GetNewFeedsResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNewFeedsResponse) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNewFeedsResponse) GetPosts() []*DisplayPost {
	if x != nil {
		return x.Posts
	}
	return nil
}

type InteractionScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint64 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Score     uint64 `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
}

func (x *InteractionScore) Reset() {
	*x = InteractionScore{}
	mi := &file_proto_post_service_post_service_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractionScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionScore) ProtoMessage() {}

func (x *InteractionScore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_service_post_service_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionScore.ProtoReflect.Descriptor instead.
func (*InteractionScore) Descriptor() ([]byte, []int) {
	return file_proto_post_service_post_service_proto_rawDescGZIP(), []int{65}
}

func (x *InteractionScore) GetAccountID() uint64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *InteractionScore) GetScore() uint64 {
	if x != nil {
		return x.Score
	}
	return 0
}

var File_proto_post_service_post_service_proto protoreflect.FileDescriptor

var file_proto_post_service_post_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0xfb, 0x01,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x49,
	0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x24, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x67, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61,
	0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x11,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5d, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x06, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xda, 0x01, 0x0a, 0x10, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x49, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x67, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x54, 0x61, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x22, 0x41,
	0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x64, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x22, 0xbf, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x06, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x69, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x40, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x42,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x54, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4c, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x34, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x49, 0x44, 0x22, 0x2f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4e, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x2f, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x69, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x51,
	0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x30, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x67, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x14,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x19, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6f, 0x0a, 0x17,
	0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a,
	0x18, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x71, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x49, 0x44, 0x22, 0x32, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x31, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x5a, 0x0a, 0x18, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x32, 0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x19, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2f, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x54, 0x0a, 0x16, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xdc, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22,
	0x97, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x29, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x22, 0x64, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x52, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x66, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4a, 0x0a, 0x0c, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44, 0x22, 0x53,
	0x0a, 0x0f, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73,
	0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73,
	0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x46,
	0x72, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c,
	0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22, 0xab, 0x01, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x44, 0x12, 0x2e,
	0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf8, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x49,
	0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x45,
	0x61, 0x63, 0x68, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19,
	0x49, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x45, 0x61, 0x63, 0x68, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c,
	0x6c, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x27, 0x0a, 0x05, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x05, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb1,
	0x06, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x37,
	0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x53, 0x65, 0x6c,
	0x66, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x49, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x49, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52, 0x06, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x52, 0x06, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x4c, 0x61, 0x74,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x4c,
	0x61, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x4c, 0x61,
	0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x5e, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x5c, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x58, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x0b, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x77, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x53, 0x65, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x44,
	0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x49, 0x44, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x46, 0x65,
	0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x32, 0xf4, 0x0f, 0x0a, 0x0b, 0x50,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x15,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x50,
	0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_post_service_post_service_proto_rawDescOnce sync.Once
	file_proto_post_service_post_service_proto_rawDescData = file_proto_post_service_post_service_proto_rawDesc
)

func file_proto_post_service_post_service_proto_rawDescGZIP() []byte {
	file_proto_post_service_post_service_proto_rawDescOnce.Do(func() {
		file_proto_post_service_post_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_post_service_post_service_proto_rawDescData)
	})
	return file_proto_post_service_post_service_proto_rawDescData
}

var file_proto_post_service_post_service_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_proto_post_service_post_service_proto_goTypes = []any{
	(*CreatePostRequest)(nil),           // 0: post.CreatePostRequest
	(*MultiMediaMessage)(nil),           // 1: post.MultiMediaMessage
	(*CreatePostResponse)(nil),          // 2: post.CreatePostResponse
	(*UploadImageRequest)(nil),          // 3: post.UploadImageRequest
	(*UploadImageResponse)(nil),         // 4: post.UploadImageResponse
	(*SharePostRequest)(nil),            // 5: post.SharePostRequest
	(*SharePostResponse)(nil),           // 6: post.SharePostResponse
	(*CommentPostRequest)(nil),          // 7: post.CommentPostRequest
	(*CommentPostResponse)(nil),         // 8: post.CommentPostResponse
	(*GetSinglePostRequest)(nil),        // 9: post.GetSinglePostRequest
	(*GetSinglePostResponse)(nil),       // 10: post.GetSinglePostResponse
	(*EditPostRequest)(nil),             // 11: post.EditPostRequest
	(*EditPostResponse)(nil),            // 12: post.EditPostResponse
	(*DeletePostRequest)(nil),           // 13: post.DeletePostRequest
	(*DeletePostResponse)(nil),          // 14: post.DeletePostResponse
	(*ReplyCommentRequest)(nil),         // 15: post.ReplyCommentRequest
	(*ReplyCommentResponse)(nil),        // 16: post.ReplyCommentResponse
	(*EditCommentRequest)(nil),          // 17: post.EditCommentRequest
	(*EditCommentResponse)(nil),         // 18: post.EditCommentResponse
	(*DeleteCommentRequest)(nil),        // 19: post.DeleteCommentRequest
	(*DeleteCommentResponse)(nil),       // 20: post.DeleteCommentResponse
	(*DeletePostImageRequest)(nil),      // 21: post.DeletePostImageRequest
	(*DeletePostImageResponse)(nil),     // 22: post.DeletePostImageResponse
	(*ReactPostRequest)(nil),            // 23: post.ReactPostRequest
	(*ReactPostResponse)(nil),           // 24: post.ReactPostResponse
	(*RemoveReactPostRequest)(nil),      // 25: post.RemoveReactPostRequest
	(*RemoveReactPostResponse)(nil),     // 26: post.RemoveReactPostResponse
	(*ReactImageRequest)(nil),           // 27: post.ReactImageRequest
	(*ReactImageResponse)(nil),          // 28: post.ReactImageResponse
	(*RemoveReactImageRequest)(nil),     // 29: post.RemoveReactImageRequest
	(*RemoveReactImageResponse)(nil),    // 30: post.RemoveReactImageResponse
	(*CommentImageRequest)(nil),         // 31: post.CommentImageRequest
	(*CommentImageResponse)(nil),        // 32: post.CommentImageResponse
	(*ReplyCommentImageRequest)(nil),    // 33: post.ReplyCommentImageRequest
	(*ReplyCommentImageResponse)(nil),   // 34: post.ReplyCommentImageResponse
	(*EditCommentImageRequest)(nil),     // 35: post.EditCommentImageRequest
	(*EditCommentImageResponse)(nil),    // 36: post.EditCommentImageResponse
	(*DeleteCommentImageRequest)(nil),   // 37: post.DeleteCommentImageRequest
	(*DeleteCommentImageResponse)(nil),  // 38: post.DeleteCommentImageResponse
	(*CountPostCommentRequest)(nil),     // 39: post.CountPostCommentRequest
	(*CountPostCommentResponse)(nil),    // 40: post.CountPostCommentResponse
	(*CountPostReactionRequest)(nil),    // 41: post.CountPostReactionRequest
	(*CountPostReactionResponse)(nil),   // 42: post.CountPostReactionResponse
	(*CountPostShareRequest)(nil),       // 43: post.CountPostShareRequest
	(*CountPostShareResponse)(nil),      // 44: post.CountPostShareResponse
	(*GetPostCommentRequest)(nil),       // 45: post.GetPostCommentRequest
	(*Comment)(nil),                     // 46: post.Comment
	(*GetPostCommentResponse)(nil),      // 47: post.GetPostCommentResponse
	(*GetPostReactionRequest)(nil),      // 48: post.GetPostReactionRequest
	(*GetPostReactionResponse)(nil),     // 49: post.GetPostReactionResponse
	(*CommentDisplay)(nil),              // 50: post.CommentDisplay
	(*ShareDisplay)(nil),                // 51: post.ShareDisplay
	(*MediaDisplay)(nil),                // 52: post.MediaDisplay
	(*ReactionDisplay)(nil),             // 53: post.ReactionDisplay
	(*GetPostMediaCommentRequest)(nil),  // 54: post.GetPostMediaCommentRequest
	(*MediaComment)(nil),                // 55: post.MediaComment
	(*GetPostMediaCommentResponse)(nil), // 56: post.GetPostMediaCommentResponse
	(*GetWallPostListRequest)(nil),      // 57: post.GetWallPostListRequest
	(*GetWallPostListResponse)(nil),     // 58: post.GetWallPostListResponse
	(*DisplayPost)(nil),                 // 59: post.DisplayPost
	(*PostReactions)(nil),               // 60: post.PostReactions
	(*PostComments)(nil),                // 61: post.PostComments
	(*PostShares)(nil),                  // 62: post.PostShares
	(*GetNewFeedsRequest)(nil),          // 63: post.GetNewFeedsRequest
	(*GetNewFeedsResponse)(nil),         // 64: post.GetNewFeedsResponse
	(*InteractionScore)(nil),            // 65: post.InteractionScore
}
var file_proto_post_service_post_service_proto_depIdxs = []int32{
	1,  // 0: post.UploadImageRequest.Medias:type_name -> post.MultiMediaMessage
	52, // 1: post.GetSinglePostResponse.Medias:type_name -> post.MediaDisplay
	46, // 2: post.Comment.Replies:type_name -> post.Comment
	46, // 3: post.GetPostCommentResponse.Comments:type_name -> post.Comment
	53, // 4: post.GetPostReactionResponse.Reactions:type_name -> post.ReactionDisplay
	55, // 5: post.MediaComment.Replies:type_name -> post.MediaComment
	55, // 6: post.GetPostMediaCommentResponse.Comments:type_name -> post.MediaComment
	59, // 7: post.GetWallPostListResponse.Posts:type_name -> post.DisplayPost
	59, // 8: post.DisplayPost.SharePostData:type_name -> post.DisplayPost
	60, // 9: post.DisplayPost.Reactions:type_name -> post.PostReactions
	61, // 10: post.DisplayPost.Comments:type_name -> post.PostComments
	62, // 11: post.DisplayPost.Shares:type_name -> post.PostShares
	52, // 12: post.DisplayPost.Medias:type_name -> post.MediaDisplay
	53, // 13: post.PostReactions.DisplayData:type_name -> post.ReactionDisplay
	50, // 14: post.PostComments.DisplayData:type_name -> post.CommentDisplay
	51, // 15: post.PostShares.DisplayData:type_name -> post.ShareDisplay
	65, // 16: post.GetNewFeedsRequest.Interactions:type_name -> post.InteractionScore
	59, // 17: post.GetNewFeedsResponse.Posts:type_name -> post.DisplayPost
	0,  // 18: post.PostService.CreateNewPost:input_type -> post.CreatePostRequest
	3,  // 19: post.PostService.UploadPostImage:input_type -> post.UploadImageRequest
	5,  // 20: post.PostService.SharePost:input_type -> post.SharePostRequest
	7,  // 21: post.PostService.CommentPost:input_type -> post.CommentPostRequest
	9,  // 22: post.PostService.GetSinglePost:input_type -> post.GetSinglePostRequest
	11, // 23: post.PostService.EditPost:input_type -> post.EditPostRequest
	13, // 24: post.PostService.DeletePost:input_type -> post.DeletePostRequest
	15, // 25: post.PostService.ReplyComment:input_type -> post.ReplyCommentRequest
	17, // 26: post.PostService.EditComment:input_type -> post.EditCommentRequest
	19, // 27: post.PostService.DeleteComment:input_type -> post.DeleteCommentRequest
	21, // 28: post.PostService.DeletePostImage:input_type -> post.DeletePostImageRequest
	23, // 29: post.PostService.ReactPost:input_type -> post.ReactPostRequest
	25, // 30: post.PostService.RemoveReactPost:input_type -> post.RemoveReactPostRequest
	27, // 31: post.PostService.ReactImage:input_type -> post.ReactImageRequest
	29, // 32: post.PostService.RemoveReactImage:input_type -> post.RemoveReactImageRequest
	31, // 33: post.PostService.CommentImage:input_type -> post.CommentImageRequest
	33, // 34: post.PostService.ReplyCommentImage:input_type -> post.ReplyCommentImageRequest
	35, // 35: post.PostService.EditCommentImage:input_type -> post.EditCommentImageRequest
	37, // 36: post.PostService.DeleteCommentImage:input_type -> post.DeleteCommentImageRequest
	39, // 37: post.PostService.CountPostComment:input_type -> post.CountPostCommentRequest
	41, // 38: post.PostService.CountPostReaction:input_type -> post.CountPostReactionRequest
	43, // 39: post.PostService.CountPostShare:input_type -> post.CountPostShareRequest
	45, // 40: post.PostService.GetPostComment:input_type -> post.GetPostCommentRequest
	48, // 41: post.PostService.GetPostReaction:input_type -> post.GetPostReactionRequest
	54, // 42: post.PostService.GetPostMediaComment:input_type -> post.GetPostMediaCommentRequest
	57, // 43: post.PostService.GetWallPostList:input_type -> post.GetWallPostListRequest
	63, // 44: post.PostService.GetNewFeeds:input_type -> post.GetNewFeedsRequest
	2,  // 45: post.PostService.CreateNewPost:output_type -> post.CreatePostResponse
	4,  // 46: post.PostService.UploadPostImage:output_type -> post.UploadImageResponse
	6,  // 47: post.PostService.SharePost:output_type -> post.SharePostResponse
	8,  // 48: post.PostService.CommentPost:output_type -> post.CommentPostResponse
	10, // 49: post.PostService.GetSinglePost:output_type -> post.GetSinglePostResponse
	12, // 50: post.PostService.EditPost:output_type -> post.EditPostResponse
	14, // 51: post.PostService.DeletePost:output_type -> post.DeletePostResponse
	16, // 52: post.PostService.ReplyComment:output_type -> post.ReplyCommentResponse
	18, // 53: post.PostService.EditComment:output_type -> post.EditCommentResponse
	20, // 54: post.PostService.DeleteComment:output_type -> post.DeleteCommentResponse
	22, // 55: post.PostService.DeletePostImage:output_type -> post.DeletePostImageResponse
	24, // 56: post.PostService.ReactPost:output_type -> post.ReactPostResponse
	26, // 57: post.PostService.RemoveReactPost:output_type -> post.RemoveReactPostResponse
	28, // 58: post.PostService.ReactImage:output_type -> post.ReactImageResponse
	30, // 59: post.PostService.RemoveReactImage:output_type -> post.RemoveReactImageResponse
	32, // 60: post.PostService.CommentImage:output_type -> post.CommentImageResponse
	34, // 61: post.PostService.ReplyCommentImage:output_type -> post.ReplyCommentImageResponse
	36, // 62: post.PostService.EditCommentImage:output_type -> post.EditCommentImageResponse
	38, // 63: post.PostService.DeleteCommentImage:output_type -> post.DeleteCommentImageResponse
	40, // 64: post.PostService.CountPostComment:output_type -> post.CountPostCommentResponse
	42, // 65: post.PostService.CountPostReaction:output_type -> post.CountPostReactionResponse
	44, // 66: post.PostService.CountPostShare:output_type -> post.CountPostShareResponse
	47, // 67: post.PostService.GetPostComment:output_type -> post.GetPostCommentResponse
	49, // 68: post.PostService.GetPostReaction:output_type -> post.GetPostReactionResponse
	56, // 69: post.PostService.GetPostMediaComment:output_type -> post.GetPostMediaCommentResponse
	58, // 70: post.PostService.GetWallPostList:output_type -> post.GetWallPostListResponse
	64, // 71: post.PostService.GetNewFeeds:output_type -> post.GetNewFeedsResponse
	45, // [45:72] is the sub-list for method output_type
	18, // [18:45] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_post_service_post_service_proto_init() }
func file_proto_post_service_post_service_proto_init() {
	if File_proto_post_service_post_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_post_service_post_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_post_service_post_service_proto_goTypes,
		DependencyIndexes: file_proto_post_service_post_service_proto_depIdxs,
		MessageInfos:      file_proto_post_service_post_service_proto_msgTypes,
	}.Build()
	File_proto_post_service_post_service_proto = out.File
	file_proto_post_service_post_service_proto_rawDesc = nil
	file_proto_post_service_post_service_proto_goTypes = nil
	file_proto_post_service_post_service_proto_depIdxs = nil
}
