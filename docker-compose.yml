
services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092

  gateway:
    build:
      context: ./gateway
    ports:
      - "8081:8081"
    depends_on:
      - auth_service
      - user_service
      - backup_service
      - friend_service
      - message_service
      - moderation_service
      - notification_service
      - online_history_service
      - otp_service
      - post_service
      - privacy_service
    networks:
      - network
    environment:
      GATEWAY_PORT: 8081

  auth_service:
    build:
      context: ./services/auth_service
    ports:
      - "50051:50051"
    environment:
      DB_HOST: auth_db
      DB_PORT: 3306
      DB_USER: auth_user
      DB_PASSWORD: auth_password
      DB_NAME: auth_db
      JWT_SECRET_KEY: be11387e090f04176f66e0c10cd79703a319e569c3aa8c6cf86caa35f534051e6367602d687f3ea977a6fa467a3f39fa9b96180822f793e865cecaa904c72f68b8a31e785be20e7e3df80fc6644ad256a4df9627897e815bbe1337137bd1e1c6c631cdacc741884cec85682b287252079c104cb22f8bec19d1770048524d1768
      ACCESS_TOKEN_DURATION: 15m
      REFRESH_TOKEN_DURATION: 365d
    depends_on:
      auth_db:
        condition: service_healthy
    networks:
      - network

  auth_db:
    image: mysql:latest
    container_name: auth_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: auth_password
    ports:
      - "3307:3306"
    volumes:
      - auth_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  user_service:
    build:
      context: ./services/user_service
    ports:
      - "50052:50052"
    networks:
      - network
    environment:
      DB_HOST: user_db
      DB_PORT: 3306
      DB_USER: user_user
      DB_PASSWORD: user_password
      DB_NAME: user_db
      CLOUDINARY_API_SECRET: Gmg11OYSKJtWFma0HqxYB6wjepM
      CLOUDINARY_CLOUD_NAME: deb9bbqpg
      CLOUDINARY_API_KEY: 347812846999143
    depends_on:
      user_db:
        condition: service_healthy

  user_db:
    image: mysql:latest
    container_name: user_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: user_db
      MYSQL_USER: user_user
      MYSQL_PASSWORD: user_password
    ports:
      - "3308:3306"
    volumes:
      - user_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backup_service:
    build:
      context: ./services/backup_service
    ports:
      - "50053:50053"
    networks:
      - network
    environment:
      DB_HOST: backup_db
      DB_PORT: 3306
      DB_USER: backup_user
      DB_PASSWORD: backup_password
      DB_NAME: backup_db
    depends_on:
      backup_db:
        condition: service_healthy

  backup_db:
    image: mysql:latest
    container_name: backup_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: backup_db
      MYSQL_USER: backup_user
      MYSQL_PASSWORD: backup_password
    ports:
      - "3309:3306" #
    volumes:
      - backup_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  friend_service:
    build:
      context: ./services/friend_service
    ports:
      - "50054:50054"
    networks:
      - network
    environment:
      DB_HOST: friend_db
      DB_PORT: 3306
      DB_USER: friend_user
      DB_PASSWORD: friend_password
      DB_NAME: friend_db
    depends_on:
      friend_db:
        condition: service_healthy

  friend_db:
    image: mysql:latest
    container_name: friend_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: friend_db
      MYSQL_USER: friend_user
      MYSQL_PASSWORD: friend_password
    ports:
      - "3310:3306"
    volumes:
      - friend_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  message_service:
    build:
      context: ./services/message_service
    ports:
      - "50055:50055"
    networks:
      - network
    environment:
      DB_HOST: message_db
      DB_PORT: 3306
      DB_USER: message_user
      DB_PASSWORD: message_password
      DB_NAME: message_db
    depends_on:
      message_db:
        condition: service_healthy

  message_db:
    image: mysql:latest
    container_name: message_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: message_db
      MYSQL_USER: message_user
      MYSQL_PASSWORD: message_password
    ports:
      - "3311:3306" #
    volumes:
      - message_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  moderation_service:
    build:
      context: ./services/moderation_service
    ports:
      - "50056:50056"
    networks:
      - network
    environment:
      DB_HOST: moderation_db
      DB_PORT: 3306
      DB_USER: moderation_user
      DB_PASSWORD: moderation_password
      DB_NAME: moderation_db
    depends_on:
      moderation_db:
        condition: service_healthy

  moderation_db:
    image: mysql:latest
    container_name: moderation_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: moderation_db
      MYSQL_USER: moderation_user
      MYSQL_PASSWORD: moderation_password
    ports:
      - "3312:3306" #
    volumes:
      - moderation_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  notification_service:
    build:
      context: ./services/notification_service
    ports:
      - "50057:50057"
    networks:
      - network
    environment:
      DB_HOST: notification_db
      DB_PORT: 3306
      DB_USER: notification_user
      DB_PASSWORD: notification_password
      DB_NAME: notification_db
    depends_on:
      notification_db:
        condition: service_healthy

  notification_db:
    image: mysql:latest
    container_name: notification_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: notification_db
      MYSQL_USER: notification_user
      MYSQL_PASSWORD: notification_password
    ports:
      - "3329:3306" #
    volumes:
      - notification_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  online_history_service:
    build:
      context: ./services/online_history_service
    ports:
      - "50058:50058"
    networks:
      - network
    environment:
      DB_HOST: online_history_db
      DB_PORT: 3306
      DB_USER: online_history_user
      DB_PASSWORD: online_history_password
      DB_NAME: online_history_db
    depends_on:
      online_history_db:
        condition: service_healthy

  online_history_db:
    image: mysql:latest
    container_name: online_history_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: online_history_db
      MYSQL_USER: online_history_user
      MYSQL_PASSWORD: online_history_password
    ports:
      - "3314:3306" #
    volumes:
      - online_history_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  otp_service:
    build:
      context: ./services/otp_service
    ports:
      - "50059:50059"
    networks:
      - network
    environment:
      DB_HOST: otp_db
      DB_PORT: 3306
      DB_USER: otp_user
      DB_PASSWORD: otp_password
      DB_NAME: otp_db
    depends_on:
      otp_db:
        condition: service_healthy

  otp_db:
    image: mysql:latest
    container_name: otp_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: otp_db
      MYSQL_USER: otp_user
      MYSQL_PASSWORD: otp_password
    ports:
      - "3315:3306" #
    volumes:
      - otp_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  post_service:
    build:
      context: ./services/post_service
    ports:
      - "51000:51000"
    networks:
      - network
    environment:
      DB_HOST: post_db
      DB_PORT: 3306
      DB_USER: post_user
      DB_PASSWORD: post_password
      DB_NAME: post_db
      CLOUDINARY_API_SECRET: Gmg11OYSKJtWFma0HqxYB6wjepM
      CLOUDINARY_CLOUD_NAME: deb9bbqpg
      CLOUDINARY_API_KEY: 347812846999143
    depends_on:
      post_db:
        condition: service_healthy

  post_db:
    image: mysql:latest
    container_name: post_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: post_db
      MYSQL_USER: post_user
      MYSQL_PASSWORD: post_password
    ports:
      - "3316:3306" #
    volumes:
      - post_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  privacy_service:
    build:
      context: ./services/privacy_service
    ports:
      - "52000:52000"
    networks:
      - network
    environment:
      DB_HOST: privacy_db
      DB_PORT: 3306
      DB_USER: privacy_user
      DB_PASSWORD: privacy_password
      DB_NAME: privacy_db
    depends_on:
      privacy_db:
        condition: service_healthy

  privacy_db:
    image: mysql:latest
    container_name: privacy_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: privacy_db
      MYSQL_USER: privacy_user
      MYSQL_PASSWORD: privacy_password
    ports:
      - "3317:3306" #
    volumes:
      - privacy_db_data:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  auth_db_data:
  user_db_data:
  backup_db_data:
  friend_db_data:
  message_db_data:
  moderation_db_data:
  online_history_db_data:
  otp_db_data:
  post_db_data:
  privacy_db_data:
  notification_db_data:


networks:
  network:
    driver: bridge
